{"db_id": "soccer_3", "query": "SELECT count(*) FROM club", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "club"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "club"], "question": "How many clubs are there?", "question_toks": ["How", "many", "clubs", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT count(*) FROM club", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "club"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "club"], "question": "Count the number of clubs.", "question_toks": ["Count", "the", "number", "of", "clubs", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Name FROM club ORDER BY Name ASC", "query_toks": ["SELECT", "Name", "FROM", "club", "ORDER", "BY", "Name", "ASC"], "query_toks_no_value": ["select", "name", "from", "club", "order", "by", "name", "asc"], "question": "List the name of clubs in ascending alphabetical order.", "question_toks": ["List", "the", "name", "of", "clubs", "in", "ascending", "alphabetical", "order", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 2, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Name FROM club ORDER BY Name ASC", "query_toks": ["SELECT", "Name", "FROM", "club", "ORDER", "BY", "Name", "ASC"], "query_toks_no_value": ["select", "name", "from", "club", "order", "by", "name", "asc"], "question": "What are the names of clubs, ordered alphabetically?", "question_toks": ["What", "are", "the", "names", "of", "clubs", ",", "ordered", "alphabetically", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 2, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Manager ,  Captain FROM club", "query_toks": ["SELECT", "Manager", ",", "Captain", "FROM", "club"], "query_toks_no_value": ["select", "manager", ",", "captain", "from", "club"], "question": "What are the managers and captains of clubs?", "question_toks": ["What", "are", "the", "managers", "and", "captains", "of", "clubs", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Manager ,  Captain FROM club", "query_toks": ["SELECT", "Manager", ",", "Captain", "FROM", "club"], "query_toks_no_value": ["select", "manager", ",", "captain", "from", "club"], "question": "Return the managers and captains of all clubs.", "question_toks": ["Return", "the", "managers", "and", "captains", "of", "all", "clubs", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Name FROM club WHERE Manufacturer != \"Nike\"", "query_toks": ["SELECT", "Name", "FROM", "club", "WHERE", "Manufacturer", "!", "=", "``", "Nike", "''"], "query_toks_no_value": ["select", "name", "from", "club", "where", "manufacturer", "!", "=", "value"], "question": "List the name of clubs whose manufacturer is not \"Nike\"", "question_toks": ["List", "the", "name", "of", "clubs", "whose", "manufacturer", "is", "not", "``", "Nike", "''"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"Nike\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Name FROM club WHERE Manufacturer != \"Nike\"", "query_toks": ["SELECT", "Name", "FROM", "club", "WHERE", "Manufacturer", "!", "=", "``", "Nike", "''"], "query_toks_no_value": ["select", "name", "from", "club", "where", "manufacturer", "!", "=", "value"], "question": "What are the names of clubs who do not have the manufacturer Nike?", "question_toks": ["What", "are", "the", "names", "of", "clubs", "who", "do", "not", "have", "the", "manufacturer", "Nike", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"Nike\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Name FROM player ORDER BY Wins_count ASC", "query_toks": ["SELECT", "Name", "FROM", "player", "ORDER", "BY", "Wins_count", "ASC"], "query_toks_no_value": ["select", "name", "from", "player", "order", "by", "wins_count", "asc"], "question": "What are the names of players in ascending order of wins count?", "question_toks": ["What", "are", "the", "names", "of", "players", "in", "ascending", "order", "of", "wins", "count", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 12, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Name FROM player ORDER BY Wins_count ASC", "query_toks": ["SELECT", "Name", "FROM", "player", "ORDER", "BY", "Wins_count", "ASC"], "query_toks_no_value": ["select", "name", "from", "player", "order", "by", "wins_count", "asc"], "question": "Return the names of players in order of count of wins, ascending.", "question_toks": ["Return", "the", "names", "of", "players", "in", "order", "of", "count", "of", "wins", ",", "ascending", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 12, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "player", "ORDER", "BY", "Earnings", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "player", "order", "by", "earnings", "desc", "limit", "value"], "question": "What is the name of the player with the highest earnings?", "question_toks": ["What", "is", "the", "name", "of", "the", "player", "with", "the", "highest", "earnings", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "player", "ORDER", "BY", "Earnings", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "player", "order", "by", "earnings", "desc", "limit", "value"], "question": "Return the name of the player who earns the most money.", "question_toks": ["Return", "the", "name", "of", "the", "player", "who", "earns", "the", "most", "money", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000", "query_toks": ["SELECT", "DISTINCT", "Country", "FROM", "player", "WHERE", "Earnings", ">", "1200000"], "query_toks_no_value": ["select", "distinct", "country", "from", "player", "where", "earnings", ">", "value"], "question": "What are the distinct countries of players with earnings higher than 1200000?", "question_toks": ["What", "are", "the", "distinct", "countries", "of", "players", "with", "earnings", "higher", "than", "1200000", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 1200000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000", "query_toks": ["SELECT", "DISTINCT", "Country", "FROM", "player", "WHERE", "Earnings", ">", "1200000"], "query_toks_no_value": ["select", "distinct", "country", "from", "player", "where", "earnings", ">", "value"], "question": "From which countries are players who make more than 1200000 from?", "question_toks": ["From", "which", "countries", "are", "players", "who", "make", "more", "than", "1200000", "from", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 1200000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Country FROM player WHERE Wins_count  >  2 ORDER BY Earnings DESC LIMIT 1", "query_toks": ["SELECT", "Country", "FROM", "player", "WHERE", "Wins_count", ">", "2", "ORDER", "BY", "Earnings", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "country", "from", "player", "where", "wins_count", ">", "value", "order", "by", "earnings", "desc", "limit", "value"], "question": "What is the country of the player with the highest earnings among players that have more than 2 win counts?", "question_toks": ["What", "is", "the", "country", "of", "the", "player", "with", "the", "highest", "earnings", "among", "players", "that", "have", "more", "than", "2", "win", "counts", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Country FROM player WHERE Wins_count  >  2 ORDER BY Earnings DESC LIMIT 1", "query_toks": ["SELECT", "Country", "FROM", "player", "WHERE", "Wins_count", ">", "2", "ORDER", "BY", "Earnings", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "country", "from", "player", "where", "wins_count", ">", "value", "order", "by", "earnings", "desc", "limit", "value"], "question": "Of players who have more than 2 wins, what is the country of the player who makes the most?", "question_toks": ["Of", "players", "who", "have", "more", "than", "2", "wins", ",", "what", "is", "the", "country", "of", "the", "player", "who", "makes", "the", "most", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT T2.Name ,  T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID", "query_toks": ["SELECT", "T2.Name", ",", "T1.Name", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "name", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id"], "question": "Show names of players and names of clubs they are in.", "question_toks": ["Show", "names", "of", "players", "and", "names", "of", "clubs", "they", "are", "in", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT T2.Name ,  T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID", "query_toks": ["SELECT", "T2.Name", ",", "T1.Name", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "name", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id"], "question": "What are the names of players and the corresponding clubs that they are in?", "question_toks": ["What", "are", "the", "names", "of", "players", "and", "the", "corresponding", "clubs", "that", "they", "are", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Wins_count  >  2", "query_toks": ["SELECT", "T1.Name", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID", "WHERE", "T2.Wins_count", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "where", "t2", ".", "wins_count", ">", "value"], "question": "Show names of clubs that have players with more than 2 win counts.", "question_toks": ["Show", "names", "of", "clubs", "that", "have", "players", "with", "more", "than", "2", "win", "counts", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Wins_count  >  2", "query_toks": ["SELECT", "T1.Name", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID", "WHERE", "T2.Wins_count", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "where", "t2", ".", "wins_count", ">", "value"], "question": "What are the names of clubs that have players who have won more than twice?", "question_toks": ["What", "are", "the", "names", "of", "clubs", "that", "have", "players", "who", "have", "won", "more", "than", "twice", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT T2.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.Manager  =  \"Sam Allardyce\"", "query_toks": ["SELECT", "T2.Name", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID", "WHERE", "T1.Manager", "=", "``", "Sam", "Allardyce", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "where", "t1", ".", "manager", "=", "value"], "question": "Show names of players from the club with manager \"Sam Allardyce\".", "question_toks": ["Show", "names", "of", "players", "from", "the", "club", "with", "manager", "``", "Sam", "Allardyce", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Sam Allardyce\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT T2.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.Manager  =  \"Sam Allardyce\"", "query_toks": ["SELECT", "T2.Name", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID", "WHERE", "T1.Manager", "=", "``", "Sam", "Allardyce", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "where", "t1", ".", "manager", "=", "value"], "question": "What are the names of players from the club managed by Sam Allardyce?", "question_toks": ["What", "are", "the", "names", "of", "players", "from", "the", "club", "managed", "by", "Sam", "Allardyce", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Sam Allardyce\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID GROUP BY T1.Club_ID ORDER BY avg(T2.Earnings) DESC", "query_toks": ["SELECT", "T1.Name", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID", "GROUP", "BY", "T1.Club_ID", "ORDER", "BY", "avg", "(", "T2.Earnings", ")", "DESC"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "group", "by", "t1", ".", "club_id", "order", "by", "avg", "(", "t2", ".", "earnings", ")", "desc"], "question": "Show names of clubs in descending order of average earnings of players belonging.", "question_toks": ["Show", "names", "of", "clubs", "in", "descending", "order", "of", "average", "earnings", "of", "players", "belonging", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [5, 10, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID GROUP BY T1.Club_ID ORDER BY avg(T2.Earnings) DESC", "query_toks": ["SELECT", "T1.Name", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID", "GROUP", "BY", "T1.Club_ID", "ORDER", "BY", "avg", "(", "T2.Earnings", ")", "DESC"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "group", "by", "t1", ".", "club_id", "order", "by", "avg", "(", "t2", ".", "earnings", ")", "desc"], "question": "What are the names of clubs, ordered descending by the average earnings of players within each?", "question_toks": ["What", "are", "the", "names", "of", "clubs", ",", "ordered", "descending", "by", "the", "average", "earnings", "of", "players", "within", "each", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [5, 10, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Manufacturer ,  COUNT(*) FROM club GROUP BY Manufacturer", "query_toks": ["SELECT", "Manufacturer", ",", "COUNT", "(", "*", ")", "FROM", "club", "GROUP", "BY", "Manufacturer"], "query_toks_no_value": ["select", "manufacturer", ",", "count", "(", "*", ")", "from", "club", "group", "by", "manufacturer"], "question": "Show different manufacturers and the number of clubs they are associated with.", "question_toks": ["Show", "different", "manufacturers", "and", "the", "number", "of", "clubs", "they", "are", "associated", "with", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Manufacturer ,  COUNT(*) FROM club GROUP BY Manufacturer", "query_toks": ["SELECT", "Manufacturer", ",", "COUNT", "(", "*", ")", "FROM", "club", "GROUP", "BY", "Manufacturer"], "query_toks_no_value": ["select", "manufacturer", ",", "count", "(", "*", ")", "from", "club", "group", "by", "manufacturer"], "question": "How many clubs use each manufacturer?", "question_toks": ["How", "many", "clubs", "use", "each", "manufacturer", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Manufacturer", "FROM", "club", "GROUP", "BY", "Manufacturer", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "manufacturer", "from", "club", "group", "by", "manufacturer", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Please show the most common manufacturer of clubs.", "question_toks": ["Please", "show", "the", "most", "common", "manufacturer", "of", "clubs", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Manufacturer", "FROM", "club", "GROUP", "BY", "Manufacturer", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "manufacturer", "from", "club", "group", "by", "manufacturer", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which manufacturer is most common among clubs?", "question_toks": ["Which", "manufacturer", "is", "most", "common", "among", "clubs", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "Manufacturer", "FROM", "club", "GROUP", "BY", "Manufacturer", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "manufacturer", "from", "club", "group", "by", "manufacturer", "having", "count", "(", "*", ")", ">", "value"], "question": "List the manufacturers that are associated with more than one club.", "question_toks": ["List", "the", "manufacturers", "that", "are", "associated", "with", "more", "than", "one", "club", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "Manufacturer", "FROM", "club", "GROUP", "BY", "Manufacturer", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "manufacturer", "from", "club", "group", "by", "manufacturer", "having", "count", "(", "*", ")", ">", "value"], "question": "Which manufacturers work for more than 1 club?", "question_toks": ["Which", "manufacturers", "work", "for", "more", "than", "1", "club", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "Country", "FROM", "player", "GROUP", "BY", "Country", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "country", "from", "player", "group", "by", "country", "having", "count", "(", "*", ")", ">", "value"], "question": "List the country that have more than one player.", "question_toks": ["List", "the", "country", "that", "have", "more", "than", "one", "player", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "Country", "FROM", "player", "GROUP", "BY", "Country", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "country", "from", "player", "group", "by", "country", "having", "count", "(", "*", ")", ">", "value"], "question": "Which countries have produced more than one player?", "question_toks": ["Which", "countries", "have", "produced", "more", "than", "one", "player", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)", "query_toks": ["SELECT", "Name", "FROM", "club", "WHERE", "Club_ID", "NOT", "IN", "(", "SELECT", "Club_ID", "FROM", "player", ")"], "query_toks_no_value": ["select", "name", "from", "club", "where", "club_id", "not", "in", "(", "select", "club_id", "from", "player", ")"], "question": "List the name of clubs that do not have players.", "question_toks": ["List", "the", "name", "of", "clubs", "that", "do", "not", "have", "players", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)", "query_toks": ["SELECT", "Name", "FROM", "club", "WHERE", "Club_ID", "NOT", "IN", "(", "SELECT", "Club_ID", "FROM", "player", ")"], "query_toks_no_value": ["select", "name", "from", "club", "where", "club_id", "not", "in", "(", "select", "club_id", "from", "player", ")"], "question": "What are the names of clubs that do not have any players?", "question_toks": ["What", "are", "the", "names", "of", "clubs", "that", "do", "not", "have", "any", "players", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Country FROM player WHERE Earnings  >  1400000 INTERSECT SELECT Country FROM player WHERE Earnings  <  1100000", "query_toks": ["SELECT", "Country", "FROM", "player", "WHERE", "Earnings", ">", "1400000", "INTERSECT", "SELECT", "Country", "FROM", "player", "WHERE", "Earnings", "<", "1100000"], "query_toks_no_value": ["select", "country", "from", "player", "where", "earnings", ">", "value", "intersect", "select", "country", "from", "player", "where", "earnings", "<", "value"], "question": "Show the country of players with earnings more than 1400000 and players with earnings less than 1100000.", "question_toks": ["Show", "the", "country", "of", "players", "with", "earnings", "more", "than", "1400000", "and", "players", "with", "earnings", "less", "than", "1100000", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 1400000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 4, [0, [0, 10, false], null], 1100000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Country FROM player WHERE Earnings  >  1400000 INTERSECT SELECT Country FROM player WHERE Earnings  <  1100000", "query_toks": ["SELECT", "Country", "FROM", "player", "WHERE", "Earnings", ">", "1400000", "INTERSECT", "SELECT", "Country", "FROM", "player", "WHERE", "Earnings", "<", "1100000"], "query_toks_no_value": ["select", "country", "from", "player", "where", "earnings", ">", "value", "intersect", "select", "country", "from", "player", "where", "earnings", "<", "value"], "question": "Which country has produced both players with earnings over 1400000 and players with earnings below 1100000?", "question_toks": ["Which", "country", "has", "produced", "both", "players", "with", "earnings", "over", "1400000", "and", "players", "with", "earnings", "below", "1100000", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 1400000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 4, [0, [0, 10, false], null], 1100000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT COUNT (DISTINCT Country) FROM player", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "Country", ")", "FROM", "player"], "query_toks_no_value": ["select", "count", "(", "distinct", "country", ")", "from", "player"], "question": "What is the number of distinct countries of all players?", "question_toks": ["What", "is", "the", "number", "of", "distinct", "countries", "of", "all", "players", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 9, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT COUNT (DISTINCT Country) FROM player", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "Country", ")", "FROM", "player"], "query_toks_no_value": ["select", "count", "(", "distinct", "country", ")", "from", "player"], "question": "How many different countries are players from?", "question_toks": ["How", "many", "different", "countries", "are", "players", "from", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 9, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Earnings FROM player WHERE Country  =  \"Australia\" OR Country  =  \"Zimbabwe\"", "query_toks": ["SELECT", "Earnings", "FROM", "player", "WHERE", "Country", "=", "``", "Australia", "''", "OR", "Country", "=", "``", "Zimbabwe", "''"], "query_toks_no_value": ["select", "earnings", "from", "player", "where", "country", "=", "value", "or", "country", "=", "value"], "question": "Show the earnings of players from country \"Australia\" or \"Zimbabwe\".", "question_toks": ["Show", "the", "earnings", "of", "players", "from", "country", "``", "Australia", "''", "or", "``", "Zimbabwe", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Australia\"", null], "or", [false, 2, [0, [0, 9, false], null], "\"Zimbabwe\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "soccer_3", "query": "SELECT Earnings FROM player WHERE Country  =  \"Australia\" OR Country  =  \"Zimbabwe\"", "query_toks": ["SELECT", "Earnings", "FROM", "player", "WHERE", "Country", "=", "``", "Australia", "''", "OR", "Country", "=", "``", "Zimbabwe", "''"], "query_toks_no_value": ["select", "earnings", "from", "player", "where", "country", "=", "value", "or", "country", "=", "value"], "question": "What are the earnings of players from either of the countries of Australia or Zimbabwe?", "question_toks": ["What", "are", "the", "earnings", "of", "players", "from", "either", "of", "the", "countries", "of", "Australia", "or", "Zimbabwe", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Australia\"", null], "or", [false, 2, [0, [0, 9, false], null], "\"Zimbabwe\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2 INTERSECT SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING count(*)  >= 3", "query_toks": ["SELECT", "T1.customer_id", ",", "T1.customer_first_name", ",", "T1.customer_last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "2", "INTERSECT", "SELECT", "T1.customer_id", ",", "T1.customer_first_name", ",", "T1.customer_last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "JOIN", "Order_items", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "t1", ".", "customer_id", ",", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_last_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "value", "intersect", "select", "t1", ".", "customer_id", ",", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_last_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "order_items", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "List the id, first name and last name of the customers who both have placed more than 2 orders and have bought at least 3 items.", "question_toks": ["List", "the", "id", ",", "first", "name", "and", "last", "name", "of", "the", "customers", "who", "both", "have", "placed", "more", "than", "2", "orders", "and", "have", "bought", "at", "least", "3", "items", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2 INTERSECT SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING count(*)  >= 3", "query_toks": ["SELECT", "T1.customer_id", ",", "T1.customer_first_name", ",", "T1.customer_last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "2", "INTERSECT", "SELECT", "T1.customer_id", ",", "T1.customer_first_name", ",", "T1.customer_last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "JOIN", "Order_items", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "t1", ".", "customer_id", ",", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_last_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "value", "intersect", "select", "t1", ".", "customer_id", ",", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_last_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "order_items", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the ids, first and last names of the customers who have ordered more than twice and have bought at least 3 items?", "question_toks": ["What", "are", "the", "ids", ",", "first", "and", "last", "names", "of", "the", "customers", "who", "have", "ordered", "more", "than", "twice", "and", "have", "bought", "at", "least", "3", "items", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.order_id ,  T1.order_status_code ,  count(*) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id", "query_toks": ["SELECT", "T1.order_id", ",", "T1.order_status_code", ",", "count", "(", "*", ")", "FROM", "Orders", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "GROUP", "BY", "T1.order_id"], "query_toks_no_value": ["select", "t1", ".", "order_id", ",", "t1", ".", "order_status_code", ",", "count", "(", "*", ")", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "group", "by", "t1", ".", "order_id"], "question": "For the orders with any produts, how many products does each orders contain ? List the order id, status and the number.", "question_toks": ["For", "the", "orders", "with", "any", "produts", ",", "how", "many", "products", "does", "each", "orders", "contain", "?", "List", "the", "order", "id", ",", "status", "and", "the", "number", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 28, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.order_id ,  T1.order_status_code ,  count(*) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id", "query_toks": ["SELECT", "T1.order_id", ",", "T1.order_status_code", ",", "count", "(", "*", ")", "FROM", "Orders", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "GROUP", "BY", "T1.order_id"], "query_toks_no_value": ["select", "t1", ".", "order_id", ",", "t1", ".", "order_status_code", ",", "count", "(", "*", ")", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "group", "by", "t1", ".", "order_id"], "question": "For every order, how many products does it contain, and what are the orders' statuses and ids?", "question_toks": ["For", "every", "order", ",", "how", "many", "products", "does", "it", "contain", ",", "and", "what", "are", "the", "orders", "'", "statuses", "and", "ids", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 28, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT min(date_order_placed) FROM Orders UNION SELECT T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  1", "query_toks": ["SELECT", "min", "(", "date_order_placed", ")", "FROM", "Orders", "UNION", "SELECT", "T1.date_order_placed", "FROM", "Orders", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "GROUP", "BY", "T1.order_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "min", "(", "date_order_placed", ")", "from", "orders", "union", "select", "t1", ".", "date_order_placed", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "group", "by", "t1", ".", "order_id", "having", "count", "(", "*", ")", ">", "value"], "question": "List the dates of the orders which were placed at the earliest time or have more than 1 items.", "question_toks": ["List", "the", "dates", "of", "the", "orders", "which", "were", "placed", "at", "the", "earliest", "time", "or", "have", "more", "than", "1", "items", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[2, [0, [0, 29, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}}
{"db_id": "e_commerce", "query": "SELECT min(date_order_placed) FROM Orders UNION SELECT T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  1", "query_toks": ["SELECT", "min", "(", "date_order_placed", ")", "FROM", "Orders", "UNION", "SELECT", "T1.date_order_placed", "FROM", "Orders", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "GROUP", "BY", "T1.order_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "min", "(", "date_order_placed", ")", "from", "orders", "union", "select", "t1", ".", "date_order_placed", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "group", "by", "t1", ".", "order_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the dates of the earliest order and the dates of all orders with more than 1 item?", "question_toks": ["What", "are", "the", "dates", "of", "the", "earliest", "order", "and", "the", "dates", "of", "all", "orders", "with", "more", "than", "1", "item", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[2, [0, [0, 29, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}}
{"db_id": "e_commerce", "query": "SELECT customer_first_name ,  customer_middle_initial ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "customer_first_name", ",", "customer_middle_initial", ",", "customer_last_name", "FROM", "Customers", "EXCEPT", "SELECT", "T1.customer_first_name", ",", "T1.customer_middle_initial", ",", "T1.customer_last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "customer_first_name", ",", "customer_middle_initial", ",", "customer_last_name", "from", "customers", "except", "select", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_middle_initial", ",", "t1", ".", "customer_last_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "Which customers did not make any orders? List the first name, middle initial and last name.", "question_toks": ["Which", "customers", "did", "not", "make", "any", "orders", "?", "List", "the", "first", "name", ",", "middle", "initial", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}
{"db_id": "e_commerce", "query": "SELECT customer_first_name ,  customer_middle_initial ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "customer_first_name", ",", "customer_middle_initial", ",", "customer_last_name", "FROM", "Customers", "EXCEPT", "SELECT", "T1.customer_first_name", ",", "T1.customer_middle_initial", ",", "T1.customer_last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "customer_first_name", ",", "customer_middle_initial", ",", "customer_last_name", "from", "customers", "except", "select", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_middle_initial", ",", "t1", ".", "customer_last_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "WHat are the first and last names, and middle initials of all customers who did not make any orders?", "question_toks": ["WHat", "are", "the", "first", "and", "last", "names", ",", "and", "middle", "initials", "of", "all", "customers", "who", "did", "not", "make", "any", "orders", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}
{"db_id": "e_commerce", "query": "SELECT product_id ,  product_name ,  product_price ,  product_color FROM Products EXCEPT SELECT T1.product_id ,  T1.product_name ,  T1.product_price ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.product_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "product_id", ",", "product_name", ",", "product_price", ",", "product_color", "FROM", "Products", "EXCEPT", "SELECT", "T1.product_id", ",", "T1.product_name", ",", "T1.product_price", ",", "T1.product_color", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "Orders", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "GROUP", "BY", "T1.product_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "product_id", ",", "product_name", ",", "product_price", ",", "product_color", "from", "products", "except", "select", "t1", ".", "product_id", ",", "t1", ".", "product_name", ",", "t1", ".", "product_price", ",", "t1", ".", "product_color", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "orders", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "group", "by", "t1", ".", "product_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the id, name, price and color of the products which have not been ordered for at least twice?", "question_toks": ["What", "are", "the", "id", ",", "name", ",", "price", "and", "color", "of", "the", "products", "which", "have", "not", "been", "ordered", "for", "at", "least", "twice", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null], "and", [false, 2, [0, [0, 32, false], null], [0, 26, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}
{"db_id": "e_commerce", "query": "select t1.product_id ,  t1.product_name ,  t1.product_price ,  t1.product_color from products as t1 join order_items as t2 on t1.product_id  =  t2.product_id join orders as t3 on t2.order_id  =  t3.order_id group by t1.product_id having count(*) < 2", "query_toks": ["select", "t1.product_id", ",", "t1.product_name", ",", "t1.product_price", ",", "t1.product_color", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1.product_id", "=", "t2.product_id", "join", "orders", "as", "t3", "on", "t2.order_id", "=", "t3.order_id", "group", "by", "t1.product_id", "having", "count", "(", "*", ")", "<", "2"], "query_toks_no_value": ["select", "t1", ".", "product_id", ",", "t1", ".", "product_name", ",", "t1", ".", "product_price", ",", "t1", ".", "product_color", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "orders", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "group", "by", "t1", ".", "product_id", "having", "count", "(", "*", ")", "<", "value"], "question": "What are the ids , names , prices , and colors of all products that have been listed in less than two orders ?", "question_toks": ["What", "are", "the", "ids", ",", "names", ",", "prices", ",", "and", "colors", "of", "all", "products", "that", "have", "been", "listed", "in", "less", "than", "two", "orders", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null], "and", [false, 2, [0, [0, 32, false], null], [0, 26, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 4, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.order_id", ",", "T1.date_order_placed", "FROM", "Orders", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "GROUP", "BY", "T1.order_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "order_id", ",", "t1", ".", "date_order_placed", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "group", "by", "t1", ".", "order_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which orders have at least 2 products on it? List the order id and date.", "question_toks": ["Which", "orders", "have", "at", "least", "2", "products", "on", "it", "?", "List", "the", "order", "id", "and", "date", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.order_id", ",", "T1.date_order_placed", "FROM", "Orders", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "GROUP", "BY", "T1.order_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "order_id", ",", "t1", ".", "date_order_placed", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "group", "by", "t1", ".", "order_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the ids and dates of the orders with at least two products?", "question_toks": ["What", "are", "the", "ids", "and", "dates", "of", "the", "orders", "with", "at", "least", "two", "products", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.product_id ,  T1.product_name ,  T1.product_price FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.product_id", ",", "T1.product_name", ",", "T1.product_price", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "GROUP", "BY", "T1.product_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "product_id", ",", "t1", ".", "product_name", ",", "t1", ".", "product_price", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "product_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which product are listed in orders most frequently? List the id, product name and price.", "question_toks": ["Which", "product", "are", "listed", "in", "orders", "most", "frequently", "?", "List", "the", "id", ",", "product", "name", "and", "price", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.product_id ,  T1.product_name ,  T1.product_price FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.product_id", ",", "T1.product_name", ",", "T1.product_price", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "GROUP", "BY", "T1.product_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "product_id", ",", "t1", ".", "product_name", ",", "t1", ".", "product_price", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "product_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the ids, names, and prices of all products that are ordered most frequently?", "question_toks": ["What", "are", "the", "ids", ",", "names", ",", "and", "prices", "of", "all", "products", "that", "are", "ordered", "most", "frequently", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.order_id ,  sum(T2.product_price) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.order_id ORDER BY sum(T2.product_price) ASC LIMIT 1", "query_toks": ["SELECT", "T1.order_id", ",", "sum", "(", "T2.product_price", ")", "FROM", "Order_items", "AS", "T1", "JOIN", "Products", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "GROUP", "BY", "T1.order_id", "ORDER", "BY", "sum", "(", "T2.product_price", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "order_id", ",", "sum", "(", "t2", ".", "product_price", ")", "from", "order_items", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "order_id", "order", "by", "sum", "(", "t2", ".", "product_price", ")", "asc", "limit", "value"], "question": "Which order have the least sum of the product prices. List the order id and sum.", "question_toks": ["Which", "order", "have", "the", "least", "sum", "of", "the", "product", "prices", ".", "List", "the", "order", "id", "and", "sum", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 31, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 32, false], null]], [4, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [], "orderBy": ["asc", [[0, [4, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "select t1.order_id ,  sum(t2.product_price) from order_items as t1 join products as t2 on t1.product_id  =  t2.product_id group by t1.order_id order by sum(t2.product_price) asc limit 1", "query_toks": ["select", "t1.order_id", ",", "sum", "(", "t2.product_price", ")", "from", "order_items", "as", "t1", "join", "products", "as", "t2", "on", "t1.product_id", "=", "t2.product_id", "group", "by", "t1.order_id", "order", "by", "sum", "(", "t2.product_price", ")", "asc", "limit", "1"], "query_toks_no_value": ["select", "t1", ".", "order_id", ",", "sum", "(", "t2", ".", "product_price", ")", "from", "order_items", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "order_id", "order", "by", "sum", "(", "t2", ".", "product_price", ")", "asc", "limit", "value"], "question": "What is the order that total cost the least , and how much is the total cost ?", "question_toks": ["What", "is", "the", "order", "that", "total", "cost", "the", "least", ",", "and", "how", "much", "is", "the", "total", "cost", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 31, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 32, false], null]], [4, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [], "orderBy": ["asc", [[0, [4, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT Payment_method_code FROM Customer_Payment_Methods GROUP BY Payment_method_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "Payment_method_code", "FROM", "Customer_Payment_Methods", "GROUP", "BY", "Payment_method_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "payment_method_code", "from", "customer_payment_methods", "group", "by", "payment_method_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the most popular payment method?", "question_toks": ["What", "is", "the", "most", "popular", "payment", "method", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [[0, 22, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT Payment_method_code FROM Customer_Payment_Methods GROUP BY Payment_method_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "Payment_method_code", "FROM", "Customer_Payment_Methods", "GROUP", "BY", "Payment_method_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "payment_method_code", "from", "customer_payment_methods", "group", "by", "payment_method_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the payment method that most customers use?", "question_toks": ["What", "is", "the", "payment", "method", "that", "most", "customers", "use", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [[0, 22, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.gender_code", "query_toks": ["SELECT", "T1.gender_code", ",", "count", "(", "*", ")", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "JOIN", "Order_items", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "GROUP", "BY", "T1.gender_code"], "query_toks_no_value": ["select", "t1", ".", "gender_code", ",", "count", "(", "*", ")", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "order_items", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "group", "by", "t1", ".", "gender_code"], "question": "How many number of products does each gender of customers buy? List the gender and the number", "question_toks": ["How", "many", "number", "of", "products", "does", "each", "gender", "of", "customers", "buy", "?", "List", "the", "gender", "and", "the", "number"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.gender_code", "query_toks": ["SELECT", "T1.gender_code", ",", "count", "(", "*", ")", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "JOIN", "Order_items", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "GROUP", "BY", "T1.gender_code"], "query_toks_no_value": ["select", "t1", ".", "gender_code", ",", "count", "(", "*", ")", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "order_items", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "group", "by", "t1", ".", "gender_code"], "question": "How many products does each gender buy?", "question_toks": ["How", "many", "products", "does", "each", "gender", "buy", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code", "query_toks": ["SELECT", "T1.gender_code", ",", "count", "(", "*", ")", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.gender_code"], "query_toks_no_value": ["select", "t1", ".", "gender_code", ",", "count", "(", "*", ")", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "gender_code"], "question": "How many orders has each gender of customers placed?", "question_toks": ["How", "many", "orders", "has", "each", "gender", "of", "customers", "placed", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code", "query_toks": ["SELECT", "T1.gender_code", ",", "count", "(", "*", ")", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.gender_code"], "query_toks_no_value": ["select", "t1", ".", "gender_code", ",", "count", "(", "*", ")", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "gender_code"], "question": "How many orders has each gender placed?", "question_toks": ["How", "many", "orders", "has", "each", "gender", "placed", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name ,  T2.Payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "T1.customer_first_name", ",", "T1.customer_middle_initial", ",", "T1.customer_last_name", ",", "T2.Payment_method_code", "FROM", "Customers", "AS", "T1", "JOIN", "Customer_Payment_Methods", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_middle_initial", ",", "t1", ".", "customer_last_name", ",", "t2", ".", "payment_method_code", "from", "customers", "as", "t1", "join", "customer_payment_methods", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "List the customers' first name, middle initial, last name and payment methods.", "question_toks": ["List", "the", "customers", "'", "first", "name", ",", "middle", "initial", ",", "last", "name", "and", "payment", "methods", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name ,  T2.Payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "T1.customer_first_name", ",", "T1.customer_middle_initial", ",", "T1.customer_last_name", ",", "T2.Payment_method_code", "FROM", "Customers", "AS", "T1", "JOIN", "Customer_Payment_Methods", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_middle_initial", ",", "t1", ".", "customer_last_name", ",", "t2", ".", "payment_method_code", "from", "customers", "as", "t1", "join", "customer_payment_methods", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "What are the first names, middle initials, last names, and payment methods of all customers?", "question_toks": ["What", "are", "the", "first", "names", ",", "middle", "initials", ",", "last", "names", ",", "and", "payment", "methods", "of", "all", "customers", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.invoice_status_code ,  T1.invoice_date ,  T2.shipment_date FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number", "query_toks": ["SELECT", "T1.invoice_status_code", ",", "T1.invoice_date", ",", "T2.shipment_date", "FROM", "Invoices", "AS", "T1", "JOIN", "Shipments", "AS", "T2", "ON", "T1.invoice_number", "=", "T2.invoice_number"], "query_toks_no_value": ["select", "t1", ".", "invoice_status_code", ",", "t1", ".", "invoice_date", ",", "t2", ".", "shipment_date", "from", "invoices", "as", "t1", "join", "shipments", "as", "t2", "on", "t1", ".", "invoice_number", "=", "t2", ".", "invoice_number"], "question": "List the invoices' status, date and the date of shipment.", "question_toks": ["List", "the", "invoices", "'", "status", ",", "date", "and", "the", "date", "of", "shipment", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 23, false], null], [0, 36, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]], [0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.invoice_status_code ,  T1.invoice_date ,  T2.shipment_date FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number", "query_toks": ["SELECT", "T1.invoice_status_code", ",", "T1.invoice_date", ",", "T2.shipment_date", "FROM", "Invoices", "AS", "T1", "JOIN", "Shipments", "AS", "T2", "ON", "T1.invoice_number", "=", "T2.invoice_number"], "query_toks_no_value": ["select", "t1", ".", "invoice_status_code", ",", "t1", ".", "invoice_date", ",", "t2", ".", "shipment_date", "from", "invoices", "as", "t1", "join", "shipments", "as", "t2", "on", "t1", ".", "invoice_number", "=", "t2", ".", "invoice_number"], "question": "What are the statuses, dates, and shipment dates for all invoices?", "question_toks": ["What", "are", "the", "statuses", ",", "dates", ",", "and", "shipment", "dates", "for", "all", "invoices", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 23, false], null], [0, 36, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]], [0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.product_name ,  T4.shipment_date FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id", "query_toks": ["SELECT", "T1.product_name", ",", "T4.shipment_date", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "Shipment_Items", "AS", "T3", "ON", "T2.order_item_id", "=", "T3.order_item_id", "JOIN", "Shipments", "AS", "T4", "ON", "T3.shipment_id", "=", "T4.shipment_id"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "t4", ".", "shipment_date", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "shipment_items", "as", "t3", "on", "t2", ".", "order_item_id", "=", "t3", ".", "order_item_id", "join", "shipments", "as", "t4", "on", "t3", ".", "shipment_id", "=", "t4", ".", "shipment_id"], "question": "List the names of the products being shipped and the corresponding shipment date.", "question_toks": ["List", "the", "names", "of", "the", "products", "being", "shipped", "and", "the", "corresponding", "shipment", "date", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5], ["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null], "and", [false, 2, [0, [0, 30, false], null], [0, 40, false], null], "and", [false, 2, [0, [0, 39, false], null], [0, 34, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.product_name ,  T4.shipment_date FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id", "query_toks": ["SELECT", "T1.product_name", ",", "T4.shipment_date", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "Shipment_Items", "AS", "T3", "ON", "T2.order_item_id", "=", "T3.order_item_id", "JOIN", "Shipments", "AS", "T4", "ON", "T3.shipment_id", "=", "T4.shipment_id"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "t4", ".", "shipment_date", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "shipment_items", "as", "t3", "on", "t2", ".", "order_item_id", "=", "t3", ".", "order_item_id", "join", "shipments", "as", "t4", "on", "t3", ".", "shipment_id", "=", "t4", ".", "shipment_id"], "question": "What are the names of the products tht have been shipped, and on what days were they shipped?", "question_toks": ["What", "are", "the", "names", "of", "the", "products", "tht", "have", "been", "shipped", ",", "and", "on", "what", "days", "were", "they", "shipped", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5], ["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null], "and", [false, 2, [0, [0, 30, false], null], [0, 40, false], null], "and", [false, 2, [0, [0, 39, false], null], [0, 34, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.order_item_status_code ,  T3.shipment_tracking_number FROM Order_items AS T1 JOIN Shipment_Items AS T2 ON T1.order_item_id  =  T2.order_item_id JOIN Shipments AS T3 ON T2.shipment_id  =  T3.shipment_id", "query_toks": ["SELECT", "T1.order_item_status_code", ",", "T3.shipment_tracking_number", "FROM", "Order_items", "AS", "T1", "JOIN", "Shipment_Items", "AS", "T2", "ON", "T1.order_item_id", "=", "T2.order_item_id", "JOIN", "Shipments", "AS", "T3", "ON", "T2.shipment_id", "=", "T3.shipment_id"], "query_toks_no_value": ["select", "t1", ".", "order_item_status_code", ",", "t3", ".", "shipment_tracking_number", "from", "order_items", "as", "t1", "join", "shipment_items", "as", "t2", "on", "t1", ".", "order_item_id", "=", "t2", ".", "order_item_id", "join", "shipments", "as", "t3", "on", "t2", ".", "shipment_id", "=", "t3", ".", "shipment_id"], "question": "What is the status code of the items being ordered and shipped and its corresponding shipment tracking number?", "question_toks": ["What", "is", "the", "status", "code", "of", "the", "items", "being", "ordered", "and", "shipped", "and", "its", "corresponding", "shipment", "tracking", "number", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 30, false], null], [0, 40, false], null], "and", [false, 2, [0, [0, 39, false], null], [0, 34, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.order_item_status_code ,  T3.shipment_tracking_number FROM Order_items AS T1 JOIN Shipment_Items AS T2 ON T1.order_item_id  =  T2.order_item_id JOIN Shipments AS T3 ON T2.shipment_id  =  T3.shipment_id", "query_toks": ["SELECT", "T1.order_item_status_code", ",", "T3.shipment_tracking_number", "FROM", "Order_items", "AS", "T1", "JOIN", "Shipment_Items", "AS", "T2", "ON", "T1.order_item_id", "=", "T2.order_item_id", "JOIN", "Shipments", "AS", "T3", "ON", "T2.shipment_id", "=", "T3.shipment_id"], "query_toks_no_value": ["select", "t1", ".", "order_item_status_code", ",", "t3", ".", "shipment_tracking_number", "from", "order_items", "as", "t1", "join", "shipment_items", "as", "t2", "on", "t1", ".", "order_item_id", "=", "t2", ".", "order_item_id", "join", "shipments", "as", "t3", "on", "t2", ".", "shipment_id", "=", "t3", ".", "shipment_id"], "question": "What is the status code of the items have been ordered and shipped, and also what are their shipment tracking numbers?", "question_toks": ["What", "is", "the", "status", "code", "of", "the", "items", "have", "been", "ordered", "and", "shipped", ",", "and", "also", "what", "are", "their", "shipment", "tracking", "numbers", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 30, false], null], [0, 40, false], null], "and", [false, 2, [0, [0, 39, false], null], [0, 34, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.product_name ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id", "query_toks": ["SELECT", "T1.product_name", ",", "T1.product_color", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "Shipment_Items", "AS", "T3", "ON", "T2.order_item_id", "=", "T3.order_item_id", "JOIN", "Shipments", "AS", "T4", "ON", "T3.shipment_id", "=", "T4.shipment_id"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "t1", ".", "product_color", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "shipment_items", "as", "t3", "on", "t2", ".", "order_item_id", "=", "t3", ".", "order_item_id", "join", "shipments", "as", "t4", "on", "t3", ".", "shipment_id", "=", "t4", ".", "shipment_id"], "question": "What is the product name and the color of the ordered items which have been shipped?", "question_toks": ["What", "is", "the", "product", "name", "and", "the", "color", "of", "the", "ordered", "items", "which", "have", "been", "shipped", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5], ["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null], "and", [false, 2, [0, [0, 30, false], null], [0, 40, false], null], "and", [false, 2, [0, [0, 39, false], null], [0, 34, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.product_name ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id", "query_toks": ["SELECT", "T1.product_name", ",", "T1.product_color", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "Shipment_Items", "AS", "T3", "ON", "T2.order_item_id", "=", "T3.order_item_id", "JOIN", "Shipments", "AS", "T4", "ON", "T3.shipment_id", "=", "T4.shipment_id"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "t1", ".", "product_color", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "shipment_items", "as", "t3", "on", "t2", ".", "order_item_id", "=", "t3", ".", "order_item_id", "join", "shipments", "as", "t4", "on", "t3", ".", "shipment_id", "=", "t4", ".", "shipment_id"], "question": "What are the names and colors of all products that have been shipped?", "question_toks": ["What", "are", "the", "names", "and", "colors", "of", "all", "products", "that", "have", "been", "shipped", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5], ["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null], "and", [false, 2, [0, [0, 30, false], null], [0, 40, false], null], "and", [false, 2, [0, [0, 39, false], null], [0, 34, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT DISTINCT T1.product_name ,  T1.product_price ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id JOIN Customers AS T4 ON T3.customer_id  =  T4.customer_id WHERE T4.gender_code  =  'Female'", "query_toks": ["SELECT", "DISTINCT", "T1.product_name", ",", "T1.product_price", ",", "T1.product_description", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "Orders", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "JOIN", "Customers", "AS", "T4", "ON", "T3.customer_id", "=", "T4.customer_id", "WHERE", "T4.gender_code", "=", "'Female", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "product_name", ",", "t1", ".", "product_price", ",", "t1", ".", "product_description", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "orders", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "join", "customers", "as", "t4", "on", "t3", ".", "customer_id", "=", "t4", ".", "customer_id", "where", "t4", ".", "gender_code", "=", "value"], "question": "List all the distinct product names, price and descriptions which are bought by female customers.", "question_toks": ["List", "all", "the", "distinct", "product", "names", ",", "price", "and", "descriptions", "which", "are", "bought", "by", "female", "customers", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5], ["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null], "and", [false, 2, [0, [0, 32, false], null], [0, 26, false], null], "and", [false, 2, [0, [0, 27, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Female\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT DISTINCT T1.product_name ,  T1.product_price ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id JOIN Customers AS T4 ON T3.customer_id  =  T4.customer_id WHERE T4.gender_code  =  'Female'", "query_toks": ["SELECT", "DISTINCT", "T1.product_name", ",", "T1.product_price", ",", "T1.product_description", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "Orders", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "JOIN", "Customers", "AS", "T4", "ON", "T3.customer_id", "=", "T4.customer_id", "WHERE", "T4.gender_code", "=", "'Female", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "product_name", ",", "t1", ".", "product_price", ",", "t1", ".", "product_description", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "orders", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "join", "customers", "as", "t4", "on", "t3", ".", "customer_id", "=", "t4", ".", "customer_id", "where", "t4", ".", "gender_code", "=", "value"], "question": "What are the different names, prices, and descriptions for all products bought by female customers?", "question_toks": ["What", "are", "the", "different", "names", ",", "prices", ",", "and", "descriptions", "for", "all", "products", "bought", "by", "female", "customers", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5], ["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null], "and", [false, 2, [0, [0, 32, false], null], [0, 26, false], null], "and", [false, 2, [0, [0, 27, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Female\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT invoice_status_code FROM Invoices WHERE invoice_number NOT IN ( SELECT invoice_number FROM Shipments )", "query_toks": ["SELECT", "invoice_status_code", "FROM", "Invoices", "WHERE", "invoice_number", "NOT", "IN", "(", "SELECT", "invoice_number", "FROM", "Shipments", ")"], "query_toks_no_value": ["select", "invoice_status_code", "from", "invoices", "where", "invoice_number", "not", "in", "(", "select", "invoice_number", "from", "shipments", ")"], "question": "What are invoices status of all the orders which have not been shipped?", "question_toks": ["What", "are", "invoices", "status", "of", "all", "the", "orders", "which", "have", "not", "been", "shipped", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[true, 8, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 36, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT invoice_status_code FROM Invoices WHERE invoice_number NOT IN ( SELECT invoice_number FROM Shipments )", "query_toks": ["SELECT", "invoice_status_code", "FROM", "Invoices", "WHERE", "invoice_number", "NOT", "IN", "(", "SELECT", "invoice_number", "FROM", "Shipments", ")"], "query_toks_no_value": ["select", "invoice_status_code", "from", "invoices", "where", "invoice_number", "not", "in", "(", "select", "invoice_number", "from", "shipments", ")"], "question": "What are the invoice statuses for all orderes that have not been shipped out yet?", "question_toks": ["What", "are", "the", "invoice", "statuses", "for", "all", "orderes", "that", "have", "not", "been", "shipped", "out", "yet", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[true, 8, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 36, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "select t1.order_id ,  t1.date_order_placed ,  sum(t3.product_price) from orders as t1 join order_items as t2 on t1.order_id  =  t2.order_id join products as t3 on t2.product_id  =  t3.product_id group by t1.order_id", "query_toks": ["select", "t1.order_id", ",", "t1.date_order_placed", ",", "sum", "(", "t3.product_price", ")", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1.order_id", "=", "t2.order_id", "join", "products", "as", "t3", "on", "t2.product_id", "=", "t3.product_id", "group", "by", "t1.order_id"], "query_toks_no_value": ["select", "t1", ".", "order_id", ",", "t1", ".", "date_order_placed", ",", "sum", "(", "t3", ".", "product_price", ")", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "join", "products", "as", "t3", "on", "t2", ".", "product_id", "=", "t3", ".", "product_id", "group", "by", "t1", ".", "order_id"], "question": "What are the total cost of all the orders ? List the order id , date , and total cost .", "question_toks": ["What", "are", "the", "total", "cost", "of", "all", "the", "orders", "?", "List", "the", "order", "id", ",", "date", ",", "and", "total", "cost", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 32, false], null], "and", [false, 2, [0, [0, 31, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 29, false], null]], [4, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.order_id ,  T1.date_order_placed ,  sum(T3.product_price) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id JOIN Products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T1.order_id", "query_toks": ["SELECT", "T1.order_id", ",", "T1.date_order_placed", ",", "sum", "(", "T3.product_price", ")", "FROM", "Orders", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "JOIN", "Products", "AS", "T3", "ON", "T2.product_id", "=", "T3.product_id", "GROUP", "BY", "T1.order_id"], "query_toks_no_value": ["select", "t1", ".", "order_id", ",", "t1", ".", "date_order_placed", ",", "sum", "(", "t3", ".", "product_price", ")", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "join", "products", "as", "t3", "on", "t2", ".", "product_id", "=", "t3", ".", "product_id", "group", "by", "t1", ".", "order_id"], "question": "For each order, what is its id, date, and total amount paid?", "question_toks": ["For", "each", "order", ",", "what", "is", "its", "id", ",", "date", ",", "and", "total", "amount", "paid", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 32, false], null], "and", [false, 2, [0, [0, 31, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 29, false], null]], [4, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT count(DISTINCT customer_id) FROM Orders", "query_toks": ["SELECT", "count", "(", "DISTINCT", "customer_id", ")", "FROM", "Orders"], "query_toks_no_value": ["select", "count", "(", "distinct", "customer_id", ")", "from", "orders"], "question": "How many customers have placed any order?", "question_toks": ["How", "many", "customers", "have", "placed", "any", "order", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 27, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT count(DISTINCT customer_id) FROM Orders", "query_toks": ["SELECT", "count", "(", "DISTINCT", "customer_id", ")", "FROM", "Orders"], "query_toks_no_value": ["select", "count", "(", "distinct", "customer_id", ")", "from", "orders"], "question": "How many different customers have ordered things?", "question_toks": ["How", "many", "different", "customers", "have", "ordered", "things", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 27, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT count(DISTINCT order_item_status_code) FROM Order_items", "query_toks": ["SELECT", "count", "(", "DISTINCT", "order_item_status_code", ")", "FROM", "Order_items"], "query_toks_no_value": ["select", "count", "(", "distinct", "order_item_status_code", ")", "from", "order_items"], "question": "How many item states are there in the orders?", "question_toks": ["How", "many", "item", "states", "are", "there", "in", "the", "orders", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 33, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT count(DISTINCT order_item_status_code) FROM Order_items", "query_toks": ["SELECT", "count", "(", "DISTINCT", "order_item_status_code", ")", "FROM", "Order_items"], "query_toks_no_value": ["select", "count", "(", "distinct", "order_item_status_code", ")", "from", "order_items"], "question": "How many different item status codes are there listed in ordered items?", "question_toks": ["How", "many", "different", "item", "status", "codes", "are", "there", "listed", "in", "ordered", "items", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 33, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT count(DISTINCT Payment_method_code) FROM Customer_Payment_Methods", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Payment_method_code", ")", "FROM", "Customer_Payment_Methods"], "query_toks_no_value": ["select", "count", "(", "distinct", "payment_method_code", ")", "from", "customer_payment_methods"], "question": "How many different payment methods are there?", "question_toks": ["How", "many", "different", "payment", "methods", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 22, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT count(DISTINCT Payment_method_code) FROM Customer_Payment_Methods", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Payment_method_code", ")", "FROM", "Customer_Payment_Methods"], "query_toks_no_value": ["select", "count", "(", "distinct", "payment_method_code", ")", "from", "customer_payment_methods"], "question": "How many different payment methods can customers choose from?", "question_toks": ["How", "many", "different", "payment", "methods", "can", "customers", "choose", "from", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 22, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT login_name ,  login_password FROM Customers WHERE phone_number LIKE '+12%'", "query_toks": ["SELECT", "login_name", ",", "login_password", "FROM", "Customers", "WHERE", "phone_number", "LIKE", "'+12", "%", "'"], "query_toks_no_value": ["select", "login_name", ",", "login_password", "from", "customers", "where", "phone_number", "like", "value"], "question": "What are the login names and passwords of the customers whose phone number have the prefix '+12'?", "question_toks": ["What", "are", "the", "login", "names", "and", "passwords", "of", "the", "customers", "whose", "phone", "number", "have", "the", "prefix", "'+12", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 9, [0, [0, 16, false], null], "\"+12%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT login_name ,  login_password FROM Customers WHERE phone_number LIKE '+12%'", "query_toks": ["SELECT", "login_name", ",", "login_password", "FROM", "Customers", "WHERE", "phone_number", "LIKE", "'+12", "%", "'"], "query_toks_no_value": ["select", "login_name", ",", "login_password", "from", "customers", "where", "phone_number", "like", "value"], "question": "What are the usernames and passwords of all customers whose phone number starts with '+12'?", "question_toks": ["What", "are", "the", "usernames", "and", "passwords", "of", "all", "customers", "whose", "phone", "number", "starts", "with", "'+12", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 9, [0, [0, 16, false], null], "\"+12%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%'", "query_toks": ["SELECT", "product_size", "FROM", "Products", "WHERE", "product_name", "LIKE", "'", "%", "Dell", "%", "'"], "query_toks_no_value": ["select", "product_size", "from", "products", "where", "product_name", "like", "value"], "question": "What are the product sizes of the products whose name has the substring 'Dell'?", "question_toks": ["What", "are", "the", "product", "sizes", "of", "the", "products", "whose", "name", "has", "the", "substring", "'Dell", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 3, false], null], "\"%Dell%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%'", "query_toks": ["SELECT", "product_size", "FROM", "Products", "WHERE", "product_name", "LIKE", "'", "%", "Dell", "%", "'"], "query_toks_no_value": ["select", "product_size", "from", "products", "where", "product_name", "like", "value"], "question": "What are the sizes of all products whose name includes the word 'Dell'?", "question_toks": ["What", "are", "the", "sizes", "of", "all", "products", "whose", "name", "includes", "the", "word", "'Dell", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 3, false], null], "\"%Dell%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT product_price ,  product_size FROM Products WHERE product_price  >  ( SELECT avg(product_price) FROM Products )", "query_toks": ["SELECT", "product_price", ",", "product_size", "FROM", "Products", "WHERE", "product_price", ">", "(", "SELECT", "avg", "(", "product_price", ")", "FROM", "Products", ")"], "query_toks_no_value": ["select", "product_price", ",", "product_size", "from", "products", "where", "product_price", ">", "(", "select", "avg", "(", "product_price", ")", "from", "products", ")"], "question": "What are the product price and the product size of the products whose price is above average?", "question_toks": ["What", "are", "the", "product", "price", "and", "the", "product", "size", "of", "the", "products", "whose", "price", "is", "above", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT product_price ,  product_size FROM Products WHERE product_price  >  ( SELECT avg(product_price) FROM Products )", "query_toks": ["SELECT", "product_price", ",", "product_size", "FROM", "Products", "WHERE", "product_price", ">", "(", "SELECT", "avg", "(", "product_price", ")", "FROM", "Products", ")"], "query_toks_no_value": ["select", "product_price", ",", "product_size", "from", "products", "where", "product_price", ">", "(", "select", "avg", "(", "product_price", ")", "from", "products", ")"], "question": "What are the prices and sizes of all products whose price is above the mean?", "question_toks": ["What", "are", "the", "prices", "and", "sizes", "of", "all", "products", "whose", "price", "is", "above", "the", "mean", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT count(*) FROM Products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Products", "WHERE", "product_id", "NOT", "IN", "(", "SELECT", "product_id", "FROM", "Order_items", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "products", "where", "product_id", "not", "in", "(", "select", "product_id", "from", "order_items", ")"], "question": "How many kinds of products have not been sold?", "question_toks": ["How", "many", "kinds", "of", "products", "have", "not", "been", "sold", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT count(*) FROM Products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Products", "WHERE", "product_id", "NOT", "IN", "(", "SELECT", "product_id", "FROM", "Order_items", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "products", "where", "product_id", "not", "in", "(", "select", "product_id", "from", "order_items", ")"], "question": "What is the number of products that have not been ordered yet?", "question_toks": ["What", "is", "the", "number", "of", "products", "that", "have", "not", "been", "ordered", "yet", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payment_Methods )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Customers", "WHERE", "customer_id", "NOT", "IN", "(", "SELECT", "customer_id", "FROM", "Customer_Payment_Methods", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "customers", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "customer_payment_methods", ")"], "question": "How many customers do not have any payment method?", "question_toks": ["How", "many", "customers", "do", "not", "have", "any", "payment", "method", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payment_Methods )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Customers", "WHERE", "customer_id", "NOT", "IN", "(", "SELECT", "customer_id", "FROM", "Customer_Payment_Methods", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "customers", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "customer_payment_methods", ")"], "question": "How many customers do not have a listed payment method?", "question_toks": ["How", "many", "customers", "do", "not", "have", "a", "listed", "payment", "method", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT order_status_code ,  date_order_placed FROM Orders", "query_toks": ["SELECT", "order_status_code", ",", "date_order_placed", "FROM", "Orders"], "query_toks_no_value": ["select", "order_status_code", ",", "date_order_placed", "from", "orders"], "question": "What are all the order status and all the dates of orders?", "question_toks": ["What", "are", "all", "the", "order", "status", "and", "all", "the", "dates", "of", "orders", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT order_status_code ,  date_order_placed FROM Orders", "query_toks": ["SELECT", "order_status_code", ",", "date_order_placed", "FROM", "Orders"], "query_toks_no_value": ["select", "order_status_code", ",", "date_order_placed", "from", "orders"], "question": "What are the status codes and dates placed for all of the orders?", "question_toks": ["What", "are", "the", "status", "codes", "and", "dates", "placed", "for", "all", "of", "the", "orders", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT address_line_1 ,  town_city ,  county FROM Customers WHERE Country  =  'USA'", "query_toks": ["SELECT", "address_line_1", ",", "town_city", ",", "county", "FROM", "Customers", "WHERE", "Country", "=", "'USA", "'"], "query_toks_no_value": ["select", "address_line_1", ",", "town_city", ",", "county", "from", "customers", "where", "country", "=", "value"], "question": "List the address, town and county information of the customers who live in the USA.", "question_toks": ["List", "the", "address", ",", "town", "and", "county", "information", "of", "the", "customers", "who", "live", "in", "the", "USA", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT address_line_1 ,  town_city ,  county FROM Customers WHERE Country  =  'USA'", "query_toks": ["SELECT", "address_line_1", ",", "town_city", ",", "county", "FROM", "Customers", "WHERE", "Country", "=", "'USA", "'"], "query_toks_no_value": ["select", "address_line_1", ",", "town_city", ",", "county", "from", "customers", "where", "country", "=", "value"], "question": "What are the addresses, towns, and county information for all customers who live in the United States?", "question_toks": ["What", "are", "the", "addresses", ",", "towns", ",", "and", "county", "information", "for", "all", "customers", "who", "live", "in", "the", "United", "States", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.customer_first_name ,  T4.product_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id JOIN Products AS T4 ON T3.product_id  =  T4.product_id", "query_toks": ["SELECT", "T1.customer_first_name", ",", "T4.product_name", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "JOIN", "Order_items", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "JOIN", "Products", "AS", "T4", "ON", "T3.product_id", "=", "T4.product_id"], "query_toks_no_value": ["select", "t1", ".", "customer_first_name", ",", "t4", ".", "product_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "order_items", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "join", "products", "as", "t4", "on", "t3", ".", "product_id", "=", "t4", ".", "product_id"], "question": "List all the pairs of buyer first names and product names.", "question_toks": ["List", "all", "the", "pairs", "of", "buyer", "first", "names", "and", "product", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 26, false], null], [0, 32, false], null], "and", [false, 2, [0, [0, 31, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.customer_first_name ,  T4.product_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id JOIN Products AS T4 ON T3.product_id  =  T4.product_id", "query_toks": ["SELECT", "T1.customer_first_name", ",", "T4.product_name", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "JOIN", "Order_items", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "JOIN", "Products", "AS", "T4", "ON", "T3.product_id", "=", "T4.product_id"], "query_toks_no_value": ["select", "t1", ".", "customer_first_name", ",", "t4", ".", "product_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "order_items", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "join", "products", "as", "t4", "on", "t3", ".", "product_id", "=", "t4", ".", "product_id"], "question": "What are the first names of all buyers and what products did they buy? List them in pairs.", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "buyers", "and", "what", "products", "did", "they", "buy", "?", "List", "them", "in", "pairs", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 26, false], null], [0, 32, false], null], "and", [false, 2, [0, [0, 31, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT count(*) FROM Shipment_Items", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Shipment_Items"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "shipment_items"], "question": "How many items are shipped?", "question_toks": ["How", "many", "items", "are", "shipped", "?"], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT count(*) FROM Shipment_Items", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Shipment_Items"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "shipment_items"], "question": "How many products have been shipped?", "question_toks": ["How", "many", "products", "have", "been", "shipped", "?"], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT avg(product_price) FROM Products", "query_toks": ["SELECT", "avg", "(", "product_price", ")", "FROM", "Products"], "query_toks_no_value": ["select", "avg", "(", "product_price", ")", "from", "products"], "question": "What is the product average price?", "question_toks": ["What", "is", "the", "product", "average", "price", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT avg(product_price) FROM Products", "query_toks": ["SELECT", "avg", "(", "product_price", ")", "FROM", "Products"], "query_toks_no_value": ["select", "avg", "(", "product_price", ")", "from", "products"], "question": "How much do the products cost on average?", "question_toks": ["How", "much", "do", "the", "products", "cost", "on", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT avg(T1.product_price) FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id", "query_toks": ["SELECT", "avg", "(", "T1.product_price", ")", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "product_price", ")", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id"], "question": "What is the average price of the products being ordered?", "question_toks": ["What", "is", "the", "average", "price", "of", "the", "products", "being", "ordered", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null]]}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT avg(T1.product_price) FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id", "query_toks": ["SELECT", "avg", "(", "T1.product_price", ")", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "product_price", ")", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id"], "question": "What is the price of all products being ordered on average?", "question_toks": ["What", "is", "the", "price", "of", "all", "products", "being", "ordered", "on", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null]]}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT email_address ,  town_city ,  county FROM Customers WHERE gender_code  =  ( SELECT gender_code FROM Customers GROUP BY gender_code ORDER BY count(*) ASC LIMIT 1 )", "query_toks": ["SELECT", "email_address", ",", "town_city", ",", "county", "FROM", "Customers", "WHERE", "gender_code", "=", "(", "SELECT", "gender_code", "FROM", "Customers", "GROUP", "BY", "gender_code", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "email_address", ",", "town_city", ",", "county", "from", "customers", "where", "gender_code", "=", "(", "select", "gender_code", "from", "customers", "group", "by", "gender_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "value", ")"], "question": "What are the email address, town and county of the customers who are of the least common gender?", "question_toks": ["What", "are", "the", "email", "address", ",", "town", "and", "county", "of", "the", "customers", "who", "are", "of", "the", "least", "common", "gender", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT email_address ,  town_city ,  county FROM Customers WHERE gender_code  =  ( SELECT gender_code FROM Customers GROUP BY gender_code ORDER BY count(*) ASC LIMIT 1 )", "query_toks": ["SELECT", "email_address", ",", "town_city", ",", "county", "FROM", "Customers", "WHERE", "gender_code", "=", "(", "SELECT", "gender_code", "FROM", "Customers", "GROUP", "BY", "gender_code", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "email_address", ",", "town_city", ",", "county", "from", "customers", "where", "gender_code", "=", "(", "select", "gender_code", "from", "customers", "group", "by", "gender_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "value", ")"], "question": "What are the email addresses, cities, and counties listed for all cusomters who are from the gender that orders less often?", "question_toks": ["What", "are", "the", "email", "addresses", ",", "cities", ",", "and", "counties", "listed", "for", "all", "cusomters", "who", "are", "from", "the", "gender", "that", "orders", "less", "often", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT date_order_placed FROM Orders WHERE customer_id IN ( SELECT T1.customer_id FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 )", "query_toks": ["SELECT", "date_order_placed", "FROM", "Orders", "WHERE", "customer_id", "IN", "(", "SELECT", "T1.customer_id", "FROM", "Customers", "AS", "T1", "JOIN", "Customer_Payment_Methods", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "=", "2", ")"], "query_toks_no_value": ["select", "date_order_placed", "from", "orders", "where", "customer_id", "in", "(", "select", "t1", ".", "customer_id", "from", "customers", "as", "t1", "join", "customer_payment_methods", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "=", "value", ")"], "question": "List the order date of the orders who are placed by customers with at least 2 payment methods.", "question_toks": ["List", "the", "order", "date", "of", "the", "orders", "who", "are", "placed", "by", "customers", "with", "at", "least", "2", "payment", "methods", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 8, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT date_order_placed FROM Orders WHERE customer_id IN ( SELECT T1.customer_id FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 )", "query_toks": ["SELECT", "date_order_placed", "FROM", "Orders", "WHERE", "customer_id", "IN", "(", "SELECT", "T1.customer_id", "FROM", "Customers", "AS", "T1", "JOIN", "Customer_Payment_Methods", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "=", "2", ")"], "query_toks_no_value": ["select", "date_order_placed", "from", "orders", "where", "customer_id", "in", "(", "select", "t1", ".", "customer_id", "from", "customers", "as", "t1", "join", "customer_payment_methods", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "=", "value", ")"], "question": "What is the date of all orders that have been placed by customers with at least 2 payment methods?", "question_toks": ["What", "is", "the", "date", "of", "all", "orders", "that", "have", "been", "placed", "by", "customers", "with", "at", "least", "2", "payment", "methods", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 8, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT order_status_code FROM Orders GROUP BY order_status_code ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "order_status_code", "FROM", "Orders", "GROUP", "BY", "order_status_code", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "order_status_code", "from", "orders", "group", "by", "order_status_code", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "What is the most uncommon order status?", "question_toks": ["What", "is", "the", "most", "uncommon", "order", "status", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 28, false], null]]]], "where": [], "groupBy": [[0, 28, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT order_status_code FROM Orders GROUP BY order_status_code ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "order_status_code", "FROM", "Orders", "GROUP", "BY", "order_status_code", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "order_status_code", "from", "orders", "group", "by", "order_status_code", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "What is the least common order status?", "question_toks": ["What", "is", "the", "least", "common", "order", "status", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 28, false], null]]]], "where": [], "groupBy": [[0, 28, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.product_id ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id HAVING count(*)  >  3", "query_toks": ["SELECT", "T1.product_id", ",", "T1.product_description", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "GROUP", "BY", "T1.product_id", "HAVING", "count", "(", "*", ")", ">", "3"], "query_toks_no_value": ["select", "t1", ".", "product_id", ",", "t1", ".", "product_description", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "product_id", "having", "count", "(", "*", ")", ">", "value"], "question": "For all the products sold for more than 3 times, list their id and description.", "question_toks": ["For", "all", "the", "products", "sold", "for", "more", "than", "3", "times", ",", "list", "their", "id", "and", "description", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.product_id ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id HAVING count(*)  >  3", "query_toks": ["SELECT", "T1.product_id", ",", "T1.product_description", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "GROUP", "BY", "T1.product_id", "HAVING", "count", "(", "*", ")", ">", "3"], "query_toks_no_value": ["select", "t1", ".", "product_id", ",", "t1", ".", "product_description", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "product_id", "having", "count", "(", "*", ")", ">", "value"], "question": "For all products sold more than 3 times, what are their ids and descriptions?", "question_toks": ["For", "all", "products", "sold", "more", "than", "3", "times", ",", "what", "are", "their", "ids", "and", "descriptions", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.invoice_date ,  T1.invoice_number FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.invoice_date", ",", "T1.invoice_number", "FROM", "Invoices", "AS", "T1", "JOIN", "Shipments", "AS", "T2", "ON", "T1.invoice_number", "=", "T2.invoice_number", "GROUP", "BY", "T1.invoice_number", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "invoice_date", ",", "t1", ".", "invoice_number", "from", "invoices", "as", "t1", "join", "shipments", "as", "t2", "on", "t1", ".", "invoice_number", "=", "t2", ".", "invoice_number", "group", "by", "t1", ".", "invoice_number", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "List the invoice dates and ids of the invoices causing at least 2 shipments.", "question_toks": ["List", "the", "invoice", "dates", "and", "ids", "of", "the", "invoices", "causing", "at", "least", "2", "shipments", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 23, false], null], [0, 36, false], null]]}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT T1.invoice_date ,  T1.invoice_number FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.invoice_date", ",", "T1.invoice_number", "FROM", "Invoices", "AS", "T1", "JOIN", "Shipments", "AS", "T2", "ON", "T1.invoice_number", "=", "T2.invoice_number", "GROUP", "BY", "T1.invoice_number", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "invoice_date", ",", "t1", ".", "invoice_number", "from", "invoices", "as", "t1", "join", "shipments", "as", "t2", "on", "t1", ".", "invoice_number", "=", "t2", ".", "invoice_number", "group", "by", "t1", ".", "invoice_number", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the dates and ids of the invoices that are related to at least 2 shipments?", "question_toks": ["What", "are", "the", "dates", "and", "ids", "of", "the", "invoices", "that", "are", "related", "to", "at", "least", "2", "shipments", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 23, false], null], [0, 36, false], null]]}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT shipment_tracking_number ,  shipment_date FROM Shipments", "query_toks": ["SELECT", "shipment_tracking_number", ",", "shipment_date", "FROM", "Shipments"], "query_toks_no_value": ["select", "shipment_tracking_number", ",", "shipment_date", "from", "shipments"], "question": "what are all shipment tracking numbers and shipment dates?", "question_toks": ["what", "are", "all", "shipment", "tracking", "numbers", "and", "shipment", "dates", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 37, false], null]], [0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT shipment_tracking_number ,  shipment_date FROM Shipments", "query_toks": ["SELECT", "shipment_tracking_number", ",", "shipment_date", "FROM", "Shipments"], "query_toks_no_value": ["select", "shipment_tracking_number", ",", "shipment_date", "from", "shipments"], "question": "What are the tracking numbers and dates for all shipments listed?", "question_toks": ["What", "are", "the", "tracking", "numbers", "and", "dates", "for", "all", "shipments", "listed", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 37, false], null]], [0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "SELECT product_color ,  product_description ,  product_size FROM Products WHERE product_price  <  ( SELECT max(product_price) FROM products )", "query_toks": ["SELECT", "product_color", ",", "product_description", ",", "product_size", "FROM", "Products", "WHERE", "product_price", "<", "(", "SELECT", "max", "(", "product_price", ")", "FROM", "products", ")"], "query_toks_no_value": ["select", "product_color", ",", "product_description", ",", "product_size", "from", "products", "where", "product_price", "<", "(", "select", "max", "(", "product_price", ")", "from", "products", ")"], "question": "What are the color, description and size of the products priced below the maximum price.", "question_toks": ["What", "are", "the", "color", ",", "description", "and", "size", "of", "the", "products", "priced", "below", "the", "maximum", "price", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "e_commerce", "query": "select product_color ,  product_description ,  product_size from products where product_price  !=  ( select max(product_price) from products )", "query_toks": ["select", "product_color", ",", "product_description", ",", "product_size", "from", "products", "where", "product_price", "!=", "(", "select", "max", "(", "product_price", ")", "from", "products", ")"], "query_toks_no_value": ["select", "product_color", ",", "product_description", ",", "product_size", "from", "products", "where", "product_price", "!", "=", "(", "select", "max", "(", "product_price", ")", "from", "products", ")"], "question": "What are the colors , descriptions , and sizes for all products that are not at the maximum price ?", "question_toks": ["What", "are", "the", "colors", ",", "descriptions", ",", "and", "sizes", "for", "all", "products", "that", "are", "not", "at", "the", "maximum", "price", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "bbc_channels", "query": "SELECT name FROM director WHERE age  >  (SELECT avg(age) FROM director)", "query_toks": ["SELECT", "name", "FROM", "director", "WHERE", "age", ">", "(", "SELECT", "avg", "(", "age", ")", "FROM", "director", ")"], "query_toks_no_value": ["select", "name", "from", "director", "where", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "director", ")"], "question": "Return the names of directors who are older than the average age.", "question_toks": ["Return", "the", "names", "of", "directors", "who", "are", "older", "than", "the", "average", "age", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "bbc_channels", "query": "SELECT name FROM director ORDER BY age DESC LIMIT 1", "query_toks": ["SELECT", "name", "FROM", "director", "ORDER", "BY", "age", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "director", "order", "by", "age", "desc", "limit", "value"], "question": "Find the the name of the oldest director.", "question_toks": ["Find", "the", "the", "name", "of", "the", "oldest", "director", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 8, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "bbc_channels", "query": "SELECT count(*) FROM channel WHERE internet LIKE \"%bbc%\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "channel", "WHERE", "internet", "LIKE", "``", "%", "bbc", "%", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "channel", "where", "internet", "like", "value"], "question": "How many channels have the word 'bbc' in their internet link?", "question_toks": ["How", "many", "channels", "have", "the", "word", "'bbc", "'", "in", "their", "internet", "link", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%bbc%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "bbc_channels", "query": "SELECT count(DISTINCT Digital_terrestrial_channel) FROM channel", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Digital_terrestrial_channel", ")", "FROM", "channel"], "query_toks_no_value": ["select", "count", "(", "distinct", "digital_terrestrial_channel", ")", "from", "channel"], "question": "How many different digital terrestrial channels are there?", "question_toks": ["How", "many", "different", "digital", "terrestrial", "channels", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 4, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "bbc_channels", "query": "SELECT title FROM program ORDER BY start_year DESC", "query_toks": ["SELECT", "title", "FROM", "program", "ORDER", "BY", "start_year", "DESC"], "query_toks_no_value": ["select", "title", "from", "program", "order", "by", "start_year", "desc"], "question": "List all program titles in the order of starting year. List the most recent one first.", "question_toks": ["List", "all", "program", "titles", "in", "the", "order", "of", "starting", "year", ".", "List", "the", "most", "recent", "one", "first", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "bbc_channels", "query": "SELECT t2.name FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id GROUP BY t1.director_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t2.name", "FROM", "program", "AS", "t1", "JOIN", "director", "AS", "t2", "ON", "t1.director_id", "=", "t2.director_id", "GROUP", "BY", "t1.director_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "program", "as", "t1", "join", "director", "as", "t2", "on", "t1", ".", "director_id", "=", "t2", ".", "director_id", "group", "by", "t1", ".", "director_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which director is in charge of the most programs?", "question_toks": ["Which", "director", "is", "in", "charge", "of", "the", "most", "programs", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "bbc_channels", "query": "SELECT t2.name ,  t2.age FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id GROUP BY t1.director_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t2.name", ",", "t2.age", "FROM", "program", "AS", "t1", "JOIN", "director", "AS", "t2", "ON", "t1.director_id", "=", "t2.director_id", "GROUP", "BY", "t1.director_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "age", "from", "program", "as", "t1", "join", "director", "as", "t2", "on", "t1", ".", "director_id", "=", "t2", ".", "director_id", "group", "by", "t1", ".", "director_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name and age of the director who is in charge of the most programs?", "question_toks": ["Find", "the", "name", "and", "age", "of", "the", "director", "who", "is", "in", "charge", "of", "the", "most", "programs", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "bbc_channels", "query": "SELECT title FROM program ORDER BY start_year DESC LIMIT 1", "query_toks": ["SELECT", "title", "FROM", "program", "ORDER", "BY", "start_year", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "title", "from", "program", "order", "by", "start_year", "desc", "limit", "value"], "question": "Return the title of the program that began most recently.", "question_toks": ["Return", "the", "title", "of", "the", "program", "that", "began", "most", "recently", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "bbc_channels", "query": "SELECT t1.name ,  t1.internet FROM channel AS t1 JOIN program AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id HAVING count(*)  >  1", "query_toks": ["SELECT", "t1.name", ",", "t1.internet", "FROM", "channel", "AS", "t1", "JOIN", "program", "AS", "t2", "ON", "t1.channel_id", "=", "t2.channel_id", "GROUP", "BY", "t1.channel_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "internet", "from", "channel", "as", "t1", "join", "program", "as", "t2", "on", "t1", ".", "channel_id", "=", "t2", ".", "channel_id", "group", "by", "t1", ".", "channel_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the name and website link of the channels that have more than one program.", "question_toks": ["Find", "the", "name", "and", "website", "link", "of", "the", "channels", "that", "have", "more", "than", "one", "program", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "bbc_channels", "query": "SELECT t1.name ,  count(*) FROM channel AS t1 JOIN program AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id", "query_toks": ["SELECT", "t1.name", ",", "count", "(", "*", ")", "FROM", "channel", "AS", "t1", "JOIN", "program", "AS", "t2", "ON", "t1.channel_id", "=", "t2.channel_id", "GROUP", "BY", "t1.channel_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "channel", "as", "t1", "join", "program", "as", "t2", "on", "t1", ".", "channel_id", "=", "t2", ".", "channel_id", "group", "by", "t1", ".", "channel_id"], "question": "Find the number of programs for each channel. Return the name of each channel as well.", "question_toks": ["Find", "the", "number", "of", "programs", "for", "each", "channel", ".", "Return", "the", "name", "of", "each", "channel", "as", "well", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "bbc_channels", "query": "SELECT count(*) FROM channel WHERE channel_id NOT IN (SELECT channel_id FROM program)", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "channel", "WHERE", "channel_id", "NOT", "IN", "(", "SELECT", "channel_id", "FROM", "program", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "channel", "where", "channel_id", "not", "in", "(", "select", "channel_id", "from", "program", ")"], "question": "Find the number of channels that do not run any program.", "question_toks": ["Find", "the", "number", "of", "channels", "that", "do", "not", "run", "any", "program", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "bbc_channels", "query": "SELECT t2.name FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id WHERE t1.title  =  'Dracula'", "query_toks": ["SELECT", "t2.name", "FROM", "program", "AS", "t1", "JOIN", "director", "AS", "t2", "ON", "t1.director_id", "=", "t2.director_id", "WHERE", "t1.title", "=", "'Dracula", "'"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "program", "as", "t1", "join", "director", "as", "t2", "on", "t1", ".", "director_id", "=", "t2", ".", "director_id", "where", "t1", ".", "title", "=", "value"], "question": "What is the name of the director who is in the \"Dracula\" program?", "question_toks": ["What", "is", "the", "name", "of", "the", "director", "who", "is", "in", "the", "``", "Dracula", "''", "program", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Dracula\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "bbc_channels", "query": "SELECT t1.name ,  t1.internet FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", ",", "t1.internet", "FROM", "channel", "AS", "t1", "JOIN", "director_admin", "AS", "t2", "ON", "t1.channel_id", "=", "t2.channel_id", "GROUP", "BY", "t1.channel_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "internet", "from", "channel", "as", "t1", "join", "director_admin", "as", "t2", "on", "t1", ".", "channel_id", "=", "t2", ".", "channel_id", "group", "by", "t1", ".", "channel_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name and internet web of the channel that is directed by the most directors.", "question_toks": ["Find", "the", "name", "and", "internet", "web", "of", "the", "channel", "that", "is", "directed", "by", "the", "most", "directors", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "bbc_channels", "query": "SELECT name FROM director WHERE age BETWEEN 30 AND 60", "query_toks": ["SELECT", "name", "FROM", "director", "WHERE", "age", "BETWEEN", "30", "AND", "60"], "query_toks_no_value": ["select", "name", "from", "director", "where", "age", "between", "value", "and", "value"], "question": "Find the name of the directors whose age is between 30 and 60.", "question_toks": ["Find", "the", "name", "of", "the", "directors", "whose", "age", "is", "between", "30", "and", "60", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 1, [0, [0, 8, false], null], 30.0, 60.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "bbc_channels", "query": "SELECT t1.name FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.age  <  40 INTERSECT SELECT t1.name FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.age  >  60", "query_toks": ["SELECT", "t1.name", "FROM", "channel", "AS", "t1", "JOIN", "director_admin", "AS", "t2", "ON", "t1.channel_id", "=", "t2.channel_id", "JOIN", "director", "AS", "t3", "ON", "t2.director_id", "=", "t3.director_id", "WHERE", "t3.age", "<", "40", "INTERSECT", "SELECT", "t1.name", "FROM", "channel", "AS", "t1", "JOIN", "director_admin", "AS", "t2", "ON", "t1.channel_id", "=", "t2.channel_id", "JOIN", "director", "AS", "t3", "ON", "t2.director_id", "=", "t3.director_id", "WHERE", "t3.age", ">", "60"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "channel", "as", "t1", "join", "director_admin", "as", "t2", "on", "t1", ".", "channel_id", "=", "t2", ".", "channel_id", "join", "director", "as", "t3", "on", "t2", ".", "director_id", "=", "t3", ".", "director_id", "where", "t3", ".", "age", "<", "value", "intersect", "select", "t1", ".", "name", "from", "channel", "as", "t1", "join", "director_admin", "as", "t2", "on", "t1", ".", "channel_id", "=", "t2", ".", "channel_id", "join", "director", "as", "t3", "on", "t2", ".", "director_id", "=", "t3", ".", "director_id", "where", "t3", ".", "age", ">", "value"], "question": "give me the name of channels that have both a director younger than 40 and a director older than 60.", "question_toks": ["give", "me", "the", "name", "of", "channels", "that", "have", "both", "a", "director", "younger", "than", "40", "and", "a", "director", "older", "than", "60", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 14, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 8, false], null], 40.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 14, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 8, false], null], 60.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}
{"db_id": "bbc_channels", "query": "SELECT t1.name ,  t1.channel_id FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.name != \"Hank Baskett\"", "query_toks": ["SELECT", "t1.name", ",", "t1.channel_id", "FROM", "channel", "AS", "t1", "JOIN", "director_admin", "AS", "t2", "ON", "t1.channel_id", "=", "t2.channel_id", "JOIN", "director", "AS", "t3", "ON", "t2.director_id", "=", "t3.director_id", "WHERE", "t3.name", "!", "=", "``", "Hank", "Baskett", "''"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "channel_id", "from", "channel", "as", "t1", "join", "director_admin", "as", "t2", "on", "t1", ".", "channel_id", "=", "t2", ".", "channel_id", "join", "director", "as", "t3", "on", "t2", ".", "director_id", "=", "t3", ".", "director_id", "where", "t3", ".", "name", "!", "=", "value"], "question": "Find the id and name of the channel that is not directed by Hank Baskett.", "question_toks": ["Find", "the", "id", "and", "name", "of", "the", "channel", "that", "is", "not", "directed", "by", "Hank", "Baskett", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 14, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [[false, 7, [0, [0, 7, false], null], "\"Hank Baskett\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "tv_shows", "query": "SELECT count(*) FROM radio", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "radio"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "radio"], "question": "How many radios are there?", "question_toks": ["How", "many", "radios", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "tv_shows", "query": "select transmitter from radio order by erp_kw asc", "query_toks": ["select", "transmitter", "from", "radio", "order", "by", "erp_kw", "asc"], "query_toks_no_value": ["select", "transmitter", "from", "radio", "order", "by", "erp_kw", "asc"], "question": "List the transmitters of radios in ascending order of erp kw .", "question_toks": ["List", "the", "transmitters", "of", "radios", "in", "ascending", "order", "of", "erp", "kw", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 12, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "tv_shows", "query": "SELECT tv_show_name ,  Original_Airdate FROM tv_show", "query_toks": ["SELECT", "tv_show_name", ",", "Original_Airdate", "FROM", "tv_show"], "query_toks_no_value": ["select", "tv_show_name", ",", "original_airdate", "from", "tv_show"], "question": "What are the names and original air dates of tv shows?", "question_toks": ["What", "are", "the", "names", "and", "original", "air", "dates", "of", "tv", "shows", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "tv_shows", "query": "SELECT Station_name FROM city_channel WHERE Affiliation != \"ABC\"", "query_toks": ["SELECT", "Station_name", "FROM", "city_channel", "WHERE", "Affiliation", "!", "=", "``", "ABC", "''"], "query_toks_no_value": ["select", "station_name", "from", "city_channel", "where", "affiliation", "!", "=", "value"], "question": "List the station names of city channels whose affiliation is not \"ABC\".", "question_toks": ["List", "the", "station", "names", "of", "city", "channels", "whose", "affiliation", "is", "not", "``", "ABC", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"ABC\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "tv_shows", "query": "SELECT Transmitter FROM radio WHERE ERP_kW  >  150 OR ERP_kW  <  30", "query_toks": ["SELECT", "Transmitter", "FROM", "radio", "WHERE", "ERP_kW", ">", "150", "OR", "ERP_kW", "<", "30"], "query_toks_no_value": ["select", "transmitter", "from", "radio", "where", "erp_kw", ">", "value", "or", "erp_kw", "<", "value"], "question": "Show the transmitters of radios whose ERP is bigger than 150 or smaller than 30.", "question_toks": ["Show", "the", "transmitters", "of", "radios", "whose", "ERP", "is", "bigger", "than", "150", "or", "smaller", "than", "30", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], 150.0, null], "or", [false, 4, [0, [0, 12, false], null], 30.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "tv_shows", "query": "SELECT Transmitter FROM radio ORDER BY ERP_kW DESC LIMIT 1", "query_toks": ["SELECT", "Transmitter", "FROM", "radio", "ORDER", "BY", "ERP_kW", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "transmitter", "from", "radio", "order", "by", "erp_kw", "desc", "limit", "value"], "question": "What is the transmitter of the radio with the largest ERP_kW?", "question_toks": ["What", "is", "the", "transmitter", "of", "the", "radio", "with", "the", "largest", "ERP_kW", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "tv_shows", "query": "SELECT avg(ERP_kW) FROM radio", "query_toks": ["SELECT", "avg", "(", "ERP_kW", ")", "FROM", "radio"], "query_toks_no_value": ["select", "avg", "(", "erp_kw", ")", "from", "radio"], "question": "What is the average ERP across all radios?", "question_toks": ["What", "is", "the", "average", "ERP", "across", "all", "radios", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "tv_shows", "query": "SELECT Affiliation ,  COUNT(*) FROM city_channel GROUP BY Affiliation", "query_toks": ["SELECT", "Affiliation", ",", "COUNT", "(", "*", ")", "FROM", "city_channel", "GROUP", "BY", "Affiliation"], "query_toks_no_value": ["select", "affiliation", ",", "count", "(", "*", ")", "from", "city_channel", "group", "by", "affiliation"], "question": "Show the different affiliations of city channels and the number of city channels with each affiliation.", "question_toks": ["Show", "the", "different", "affiliations", "of", "city", "channels", "and", "the", "number", "of", "city", "channels", "with", "each", "affiliation", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "tv_shows", "query": "SELECT Affiliation FROM city_channel GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Affiliation", "FROM", "city_channel", "GROUP", "BY", "Affiliation", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "affiliation", "from", "city_channel", "group", "by", "affiliation", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Please show the most common affiliation for city channels.", "question_toks": ["Please", "show", "the", "most", "common", "affiliation", "for", "city", "channels", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}
{"db_id": "tv_shows", "query": "SELECT Affiliation FROM city_channel GROUP BY Affiliation HAVING COUNT(*)  >  3", "query_toks": ["SELECT", "Affiliation", "FROM", "city_channel", "GROUP", "BY", "Affiliation", "HAVING", "COUNT", "(", "*", ")", ">", "3"], "query_toks_no_value": ["select", "affiliation", "from", "city_channel", "group", "by", "affiliation", "having", "count", "(", "*", ")", ">", "value"], "question": "List the affiliations shared by more than three city channels.", "question_toks": ["List", "the", "affiliations", "shared", "by", "more", "than", "three", "city", "channels", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "tv_shows", "query": "SELECT City ,  Station_name FROM city_channel ORDER BY Station_name ASC", "query_toks": ["SELECT", "City", ",", "Station_name", "FROM", "city_channel", "ORDER", "BY", "Station_name", "ASC"], "query_toks_no_value": ["select", "city", ",", "station_name", "from", "city_channel", "order", "by", "station_name", "asc"], "question": "Show the cities and station names of city channels in ascending alphabetical order of station name.", "question_toks": ["Show", "the", "cities", "and", "station", "names", "of", "city", "channels", "in", "ascending", "alphabetical", "order", "of", "station", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "tv_shows", "query": "SELECT T3.Transmitter ,  T2.City FROM city_channel_radio AS T1 JOIN city_channel AS T2 ON T1.City_channel_ID  =  T2.ID JOIN radio AS T3 ON T1.Radio_ID  =  T3.Radio_ID", "query_toks": ["SELECT", "T3.Transmitter", ",", "T2.City", "FROM", "city_channel_radio", "AS", "T1", "JOIN", "city_channel", "AS", "T2", "ON", "T1.City_channel_ID", "=", "T2.ID", "JOIN", "radio", "AS", "T3", "ON", "T1.Radio_ID", "=", "T3.Radio_ID"], "query_toks_no_value": ["select", "t3", ".", "transmitter", ",", "t2", ".", "city", "from", "city_channel_radio", "as", "t1", "join", "city_channel", "as", "t2", "on", "t1", ".", "city_channel_id", "=", "t2", ".", "id", "join", "radio", "as", "t3", "on", "t1", ".", "radio_id", "=", "t3", ".", "radio_id"], "question": "Show the transmitters of radios and the cities of the channels they are associated with.", "question_toks": ["Show", "the", "transmitters", "of", "radios", "and", "the", "cities", "of", "the", "channels", "they", "are", "associated", "with", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 19, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "tv_shows", "query": "SELECT T3.Transmitter ,  T2.Station_name FROM city_channel_radio AS T1 JOIN city_channel AS T2 ON T1.City_channel_ID  =  T2.ID JOIN radio AS T3 ON T1.Radio_ID  =  T3.Radio_ID ORDER BY T3.ERP_kW DESC", "query_toks": ["SELECT", "T3.Transmitter", ",", "T2.Station_name", "FROM", "city_channel_radio", "AS", "T1", "JOIN", "city_channel", "AS", "T2", "ON", "T1.City_channel_ID", "=", "T2.ID", "JOIN", "radio", "AS", "T3", "ON", "T1.Radio_ID", "=", "T3.Radio_ID", "ORDER", "BY", "T3.ERP_kW", "DESC"], "query_toks_no_value": ["select", "t3", ".", "transmitter", ",", "t2", ".", "station_name", "from", "city_channel_radio", "as", "t1", "join", "city_channel", "as", "t2", "on", "t1", ".", "city_channel_id", "=", "t2", ".", "id", "join", "radio", "as", "t3", "on", "t1", ".", "radio_id", "=", "t3", ".", "radio_id", "order", "by", "t3", ".", "erp_kw", "desc"], "question": "Show the transmitters of radios and the station names of the channels they are associated with in descending order of the ERP of the radios.", "question_toks": ["Show", "the", "transmitters", "of", "radios", "and", "the", "station", "names", "of", "the", "channels", "they", "are", "associated", "with", "in", "descending", "order", "of", "the", "ERP", "of", "the", "radios", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 19, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}
{"db_id": "tv_shows", "query": "SELECT T2.Transmitter ,  COUNT(*) FROM city_channel_radio AS T1 JOIN radio AS T2 ON T1.Radio_ID  =  T2.Radio_ID GROUP BY T2.Transmitter", "query_toks": ["SELECT", "T2.Transmitter", ",", "COUNT", "(", "*", ")", "FROM", "city_channel_radio", "AS", "T1", "JOIN", "radio", "AS", "T2", "ON", "T1.Radio_ID", "=", "T2.Radio_ID", "GROUP", "BY", "T2.Transmitter"], "query_toks_no_value": ["select", "t2", ".", "transmitter", ",", "count", "(", "*", ")", "from", "city_channel_radio", "as", "t1", "join", "radio", "as", "t2", "on", "t1", ".", "radio_id", "=", "t2", ".", "radio_id", "group", "by", "t2", ".", "transmitter"], "question": "Show the transmitters of the radios and the number of city channels they are associated with.", "question_toks": ["Show", "the", "transmitters", "of", "the", "radios", "and", "the", "number", "of", "city", "channels", "they", "are", "associated", "with", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}
