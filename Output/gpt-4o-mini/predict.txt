SELECT COUNT(DISTINCT `club id`) AS total_clubs FROM club;
SELECT COUNT(*) AS total_clubs FROM club;
SELECT name FROM club ORDER BY name ASC;
SELECT name FROM club ORDER BY name ASC;
SELECT manager, captain FROM club;
SELECT manager, captain FROM club;
SELECT name FROM club WHERE manufacturer != 'Nike';
SELECT name FROM club WHERE manufacturer != 'Nike';
SELECT name FROM player ORDER BY wins count ASC;
SELECT name FROM player ORDER BY wins count ASC;
SELECT name FROM player ORDER BY earnings DESC LIMIT 1;
SELECT name FROM player ORDER BY earnings DESC LIMIT 1;
SELECT DISTINCT country FROM player WHERE earnings > 1200000;
SELECT DISTINCT country FROM player WHERE earnings > 1200000;
SELECT country FROM player WHERE earnings = (SELECT MAX(earnings) FROM player WHERE wins count > 2);
SELECT country FROM player WHERE earnings = (SELECT MAX(earnings) FROM player WHERE wins count > 2);
SELECT p.name AS player_name, c.name AS club_name FROM player p INNER JOIN club c ON p.club_id = c.club_id;
SELECT p.name AS player_name, c.name AS club_name FROM player p INNER JOIN club c ON p.club_id = c.club_id;
SELECT DISTINCT c.name FROM club c INNER JOIN player p ON c.club_id = p.club_id WHERE p.wins_count > 2;
SELECT DISTINCT c.name FROM club c INNER JOIN player p ON c.club_id = p.club_id WHERE p.wins_count > 2;
SELECT p.name FROM player p INNER JOIN club c ON p.club_id = c.club_id WHERE c.manager = 'Sam Allardyce';
SELECT p.name FROM player p INNER JOIN club c ON p.club_id = c.club_id WHERE c.manager = 'Sam Allardyce';
SELECT c.name FROM club c INNER JOIN player p ON c.club_id = p.club_id GROUP BY c.name ORDER BY AVG(p.earnings) DESC;
SELECT c.name FROM club c INNER JOIN player p ON c.club_id = p.club_id GROUP BY c.name ORDER BY AVG(p.earnings) DESC;
SELECT manufacturer, COUNT(*) AS club_count FROM club GROUP BY manufacturer;
SELECT manufacturer, COUNT(*) AS club_count FROM club GROUP BY manufacturer;
SELECT manufacturer FROM club GROUP BY manufacturer ORDER BY COUNT(*) DESC LIMIT 1;
SELECT manufacturer FROM club GROUP BY manufacturer ORDER BY COUNT(*) DESC LIMIT 1;
SELECT manufacturer FROM club GROUP BY manufacturer HAVING COUNT(*) > 1;
SELECT manufacturer FROM club GROUP BY manufacturer HAVING COUNT(*) > 1;
SELECT country FROM player GROUP BY country HAVING COUNT(*) > 1;
SELECT country FROM player GROUP BY country HAVING COUNT(*) > 1;
SELECT c.name FROM club c LEFT JOIN player p ON c.club_id = p.club_id WHERE p.player_id IS NULL;
SELECT c.name FROM club c LEFT JOIN player p ON c.club_id = p.club_id WHERE p.player_id IS NULL;
(SELECT country FROM player WHERE earnings > 1400000) UNION (SELECT country FROM player WHERE earnings < 1100000);
SELECT country FROM player WHERE earnings > 1400000 OR earnings < 1100000 GROUP BY country HAVING COUNT(DISTINCT CASE WHEN earnings > 1400000 THEN 1 END) > 0 AND COUNT(DISTINCT CASE WHEN earnings < 1100000 THEN 1 END) > 0;
SELECT COUNT(DISTINCT country) AS distinct_country_count FROM player;
SELECT COUNT(DISTINCT country) AS different_countries_count FROM player;
SELECT earnings FROM player WHERE country IN ('Australia', 'Zimbabwe');
SELECT earnings FROM player WHERE country IN ('Australia', 'Zimbabwe');
SELECT c.customer_id, c.customer_first_name, c.customer_last_name FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id INNER JOIN order_items oi ON o.order_id = oi.order_id GROUP BY c.customer_id HAVING COUNT(DISTINCT o.order_id) > 2 AND SUM(oi.product_id) >= 3;
SELECT c.customer_id, c.customer_first_name, c.customer_last_name FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id INNER JOIN order_items oi ON o.order_id = oi.order_id GROUP BY c.customer_id HAVING COUNT(DISTINCT o.order_id) > 2 AND COUNT(oi.order_item_id) >= 3;
SELECT o.order_id, o.order_status_code, COUNT(oi.product_id) AS product_count FROM orders o INNER JOIN order_items oi ON o.order_id = oi.order_id GROUP BY o.order_id;
SELECT o.order_id, o.order_status_code, COUNT(oi.product_id) AS product_count FROM orders o INNER JOIN order_items oi ON o.order_id = oi.order_id GROUP BY o.order_id;
SELECT o.date_order_placed FROM orders o LEFT JOIN order_items oi ON o.order_id = oi.order_id WHERE o.date_order_placed = (SELECT MIN(date_order_placed) FROM orders) OR COUNT(oi.order_item_id) > 1 GROUP BY o.order_id;
SELECT o.date_order_placed FROM orders o LEFT JOIN order_items oi ON o.order_id = oi.order_id GROUP BY o.order_id HAVING MIN(o.date_order_placed) OR COUNT(oi.order_item_id) > 1;
SELECT c.customer_first_name, c.customer_middle_initial, c.customer_last_name FROM customers c LEFT JOIN orders o ON c.customer_id = o.customer_id WHERE o.order_id IS NULL;
SELECT c.customer_first_name, c.customer_middle_initial, c.customer_last_name FROM customers c LEFT JOIN orders o ON c.customer_id = o.customer_id WHERE o.order_id IS NULL;
SELECT p.product_id, p.product_name, p.product_price, p.product_color FROM products p LEFT JOIN order_items oi ON p.product_id = oi.product_id GROUP BY p.product_id HAVING COUNT(oi.order_item_id) < 2;
SELECT p.product_id, p.product_name, p.product_price, p.product_color FROM products p LEFT JOIN order_items oi ON p.product_id = oi.product_id GROUP BY p.product_id HAVING COUNT(oi.order_item_id) < 2;
SELECT o.order_id, o.date_order_placed FROM orders o INNER JOIN order_items oi ON o.order_id = oi.order_id GROUP BY o.order_id HAVING COUNT(oi.product_id) >= 2;
SELECT o.order_id, o.date_order_placed FROM orders o INNER JOIN order_items oi ON o.order_id = oi.order_id GROUP BY o.order_id HAVING COUNT(oi.order_item_id) >= 2;
SELECT p.product_id, p.product_name, p.product_price FROM products p INNER JOIN order_items oi ON p.product_id = oi.product_id GROUP BY p.product_id ORDER BY COUNT(oi.order_item_id) DESC LIMIT 1;
SELECT p.product_id, p.product_name, p.product_price FROM products p INNER JOIN order_items oi ON p.product_id = oi.product_id GROUP BY p.product_id ORDER BY COUNT(oi.order_item_id) DESC;
SELECT o.order_id, SUM(p.product_price) AS total_price FROM orders o INNER JOIN order_items oi ON o.order_id = oi.order_id INNER JOIN products p ON oi.product_id = p.product_id GROUP BY o.order_id ORDER BY total_price ASC LIMIT 1;
SELECT o.order_id, SUM(p.product_price) AS total_cost FROM orders o INNER JOIN order_items oi ON o.order_id = oi.order_id INNER JOIN products p ON oi.product_id = p.product_id GROUP BY o.order_id ORDER BY total_cost ASC LIMIT 1;
SELECT payment_method_code, COUNT(*) AS method_count FROM customer_payment_methods GROUP BY payment_method_code ORDER BY method_count DESC LIMIT 1;
SELECT payment_method_code, COUNT(*) AS usage_count FROM customer_payment_methods GROUP BY payment_method_code ORDER BY usage_count DESC LIMIT 1;
SELECT c.gender_code, COUNT(oi.product_id) AS product_count FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id INNER JOIN order_items oi ON o.order_id = oi.order_id GROUP BY c.gender_code;
SELECT c.gender_code, COUNT(oi.product_id) AS product_count FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id INNER JOIN order_items oi ON o.order_id = oi.order_id GROUP BY c.gender_code;
SELECT c.gender_code, COUNT(o.order_id) AS order_count FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.gender_code;
SELECT c.gender_code, COUNT(o.order_id) AS order_count FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.gender_code;
SELECT c.customer_first_name, c.customer_middle_initial, c.customer_last_name, pm.payment_method_code FROM customers c INNER JOIN customer_payment_methods pm ON c.customer_id = pm.customer_id;
SELECT c.customer_first_name, c.customer_middle_initial, c.customer_last_name, pm.payment_method_code FROM customers c INNER JOIN customer_payment_methods pm ON c.customer_id = pm.customer_id;
SELECT i.invoice_status_code, i.invoice_date, s.shipment_date FROM invoices i INNER JOIN shipments s ON i.invoice_number = s.invoice_number;
SELECT i.invoice_status_code, i.invoice_date, s.shipment_date FROM invoices i LEFT JOIN shipments s ON i.invoice_number = s.invoice_number;
SELECT p.product_name, s.shipment_date FROM products p INNER JOIN order_items oi ON p.product_id = oi.product_id INNER JOIN shipments s ON oi.order_id = s.order_id;
SELECT p.product_name, s.shipment_date FROM products p INNER JOIN order_items oi ON p.product_id = oi.product_id INNER JOIN shipments s ON oi.order_id = s.order_id;
SELECT oi.order_item_status_code, s.shipment_date, s.shipment_tracking_number FROM order_items oi INNER JOIN shipments s ON oi.order_id = s.order_id;
SELECT oi.order_item_status_code, s.shipment_tracking_number FROM order_items oi INNER JOIN shipments s ON oi.order_id = s.order_id WHERE s.shipment_date IS NOT NULL;
SELECT p.product_name, p.product_color FROM products p INNER JOIN order_items oi ON p.product_id = oi.product_id INNER JOIN shipments s ON oi.order_id = s.order_id;
SELECT p.product_name, p.product_color FROM products p INNER JOIN order_items oi ON p.product_id = oi.product_id INNER JOIN shipments s ON oi.order_id = s.order_id;
SELECT DISTINCT p.product_name, p.product_price, p.product_color FROM products p INNER JOIN order_items oi ON p.product_id = oi.product_id INNER JOIN customers c ON oi.customer_id = c.customer_id WHERE c.gender_code = 'F';
SELECT DISTINCT p.product_name, p.product_price, p.product_description FROM products p INNER JOIN order_items oi ON p.product_id = oi.product_id INNER JOIN customers c ON oi.customer_id = c.customer_id WHERE c.gender_code = 'F';
SELECT i.invoice_status_code FROM invoices i LEFT JOIN shipments s ON i.invoice_number = s.invoice_number WHERE s.shipment_id IS NULL;
SELECT i.invoice_status_code FROM invoices i LEFT JOIN shipments s ON i.invoice_number = s.invoice_number WHERE s.shipment_id IS NULL;
SELECT o.order_id, o.date_order_placed, SUM(p.product_price) AS total_cost FROM orders o INNER JOIN order_items oi ON o.order_id = oi.order_id INNER JOIN products p ON oi.product_id = p.product_id GROUP BY o.order_id;
SELECT o.order_id, o.date_order_placed, SUM(p.product_price) AS total_amount FROM orders o INNER JOIN order_items oi ON o.order_id = oi.order_id INNER JOIN products p ON oi.product_id = p.product_id GROUP BY o.order_id;
SELECT COUNT(DISTINCT o.order_id) AS order_count FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id;
SELECT COUNT(DISTINCT c.customer_id) AS customer_count FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id;
SELECT COUNT(DISTINCT oi.order_item_status_code) AS item_state_count FROM order_items oi INNER JOIN shipments s ON oi.order_id = s.order_id WHERE s.shipment_id IS NOT NULL;
SELECT COUNT(DISTINCT oi.order_item_status_code) AS distinct_status_count FROM order_items oi;
SELECT COUNT(DISTINCT pm.payment_method_code) AS different_payment_methods_count FROM customer_payment_methods pm;
SELECT COUNT(DISTINCT payment_method_code) AS distinct_payment_methods_count FROM customer_payment_methods;
SELECT c.login_name, c.login_password FROM customers c WHERE c.phone_number LIKE '+12%';
SELECT c.login_name, c.login_password FROM customers c WHERE c.phone_number LIKE '+12%';
SELECT DISTINCT p.product_name, p.product_color, p.product_size FROM products p INNER JOIN order_items oi ON p.product_id = oi.product_id WHERE p.product_name LIKE '%Dell%';
SELECT p.product_size FROM products p INNER JOIN order_items oi ON p.product_id = oi.product_id WHERE p.product_name LIKE '%Dell%';
SELECT p.product_price, p.product_size FROM products p WHERE p.product_price > (SELECT AVG(product_price) FROM products);
SELECT p.product_price, p.product_size FROM products p WHERE p.product_price > (SELECT AVG(product_price) FROM products);
SELECT COUNT(p.product_id) AS un_ordered_product_count FROM products p LEFT JOIN order_items oi ON p.product_id = oi.product_id WHERE oi.order_item_id IS NULL;
SELECT COUNT(p.product_id) AS un_ordered_product_count FROM products p LEFT JOIN order_items oi ON p.product_id = oi.product_id WHERE oi.order_item_id IS NULL;
SELECT COUNT(DISTINCT c.customer_id) AS customer_count FROM customers c LEFT JOIN customer_payment_methods pm ON c.customer_id = pm.customer_id WHERE pm.payment_method_code IS NULL;
SELECT COUNT(DISTINCT c.customer_id) AS customers_without_payment_methods FROM customers c LEFT JOIN customer_payment_methods pm ON c.customer_id = pm.customer_id WHERE pm.payment_method_code IS NULL;
SELECT o.order_status_code, o.date_order_placed FROM orders o LEFT JOIN shipments s ON o.order_id = s.order_id WHERE s.shipment_id IS NULL;
SELECT o.order_status_code, o.date_order_placed FROM orders o;
SELECT c.address_line_1, c.town_city, c.county FROM customers c WHERE c.country = 'USA';
SELECT c.address_line_1, c.town_city, c.county FROM customers c WHERE c.country = 'United States';
SELECT c.customer_first_name, p.product_name FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id INNER JOIN order_items oi ON o.order_id = oi.order_id INNER JOIN products p ON oi.product_id = p.product_id;
SELECT c.customer_first_name, p.product_name FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id INNER JOIN order_items oi ON o.order_id = oi.order_id INNER JOIN products p ON oi.product_id = p.product_id;
SELECT COUNT(oi.product_id) AS items_shipped_count FROM order_items oi INNER JOIN shipments s ON oi.order_id = s.order_id;
SELECT COUNT(oi.product_id) AS products_shipped_count FROM order_items oi INNER JOIN shipments s ON oi.order_id = s.order_id;
SELECT AVG(p.product_price) AS average_price FROM products p;
SELECT AVG(product_price) AS average_price FROM products;
SELECT AVG(p.product_price) AS average_price FROM products p INNER JOIN order_items oi ON p.product_id = oi.product_id;
SELECT AVG(p.product_price) AS average_price FROM products p INNER JOIN order_items oi ON p.product_id = oi.product_id;
SELECT c.email_address, c.town_city, c.county FROM customers c WHERE c.gender_code = (SELECT gender_code FROM customers GROUP BY gender_code ORDER BY COUNT(*) ASC LIMIT 1);
SELECT c.email_address, c.town_city, c.county FROM customers c WHERE c.gender_code = (SELECT gender_code FROM customers GROUP BY gender_code ORDER BY COUNT(*) ASC LIMIT 1) AND c.customer_id NOT IN (SELECT DISTINCT o.customer_id FROM orders o);
SELECT o.date_order_placed FROM orders o INNER JOIN customers c ON o.customer_id = c.customer_id INNER JOIN customer_payment_methods pm ON c.customer_id = pm.customer_id GROUP BY o.order_id HAVING COUNT(DISTINCT pm.payment_method_code) >= 2;
SELECT o.date_order_placed FROM orders o INNER JOIN customers c ON o.customer_id = c.customer_id INNER JOIN customer_payment_methods pm ON c.customer_id = pm.customer_id GROUP BY o.order_id HAVING COUNT(DISTINCT pm.payment_method_code) >= 2;
SELECT o.order_status_code FROM orders o GROUP BY o.order_status_code ORDER BY COUNT(*) ASC LIMIT 1;
SELECT o.order_status_code FROM orders o GROUP BY o.order_status_code ORDER BY COUNT(*) ASC LIMIT 1;
SELECT p.product_id, p.product_description FROM products p JOIN order_items oi ON p.product_id = oi.product_id GROUP BY p.product_id HAVING COUNT(oi.order_item_id) > 3;
SELECT p.product_id, p.product_description FROM products p JOIN order_items oi ON p.product_id = oi.product_id GROUP BY p.product_id HAVING COUNT(oi.order_item_id) > 3;
SELECT i.invoice_date, i.invoice_number FROM invoices i JOIN shipments s ON i.invoice_number = s.invoice_number GROUP BY i.invoice_number HAVING COUNT(s.shipment_id) >= 2;
SELECT i.invoice_date, i.invoice_number FROM invoices i JOIN shipments s ON i.invoice_number = s.invoice_number GROUP BY i.invoice_number HAVING COUNT(s.shipment_id) >= 2;
SELECT s.shipment_tracking_number, s.shipment_date FROM shipments s;
SELECT s.shipment_tracking_number, s.shipment_date FROM shipments s;
SELECT p.product_color, p.product_description, p.product_size FROM products p WHERE p.product_price < (SELECT MAX(product_price) FROM products);
SELECT p.product_color, p.product_description, p.product_size FROM products p WHERE p.product_price < (SELECT MAX(product_price) FROM products);
SELECT d.name FROM director d WHERE d.age > (SELECT AVG(age) FROM director);
SELECT d.name FROM director d WHERE d.age = (SELECT MAX(age) FROM director);
SELECT COUNT(*) FROM channel WHERE internet LIKE '%bbc%';
SELECT COUNT(DISTINCT digital_terrestrial_channel) FROM channel;
SELECT title FROM program ORDER BY start_year DESC;
SELECT d.name FROM director d JOIN program p ON d.director_id = p.director_id GROUP BY d.director_id ORDER BY COUNT(p.program_id) DESC LIMIT 1;
SELECT d.name, d.age FROM director d JOIN program p ON d.director_id = p.director_id GROUP BY d.director_id ORDER BY COUNT(p.program_id) DESC LIMIT 1;
SELECT title FROM program ORDER BY start_year DESC LIMIT 1;
SELECT c.name, c.internet FROM channel c JOIN program p ON c.channel_id = p.channel_id GROUP BY c.channel_id HAVING COUNT(p.program_id) > 1;
SELECT c.name, COUNT(p.program_id) AS program_count FROM channel c LEFT JOIN program p ON c.channel_id = p.channel_id GROUP BY c.channel_id;
SELECT COUNT(*) FROM channel c LEFT JOIN program p ON c.channel_id = p.channel_id WHERE p.program_id IS NULL;
SELECT d.name FROM director d JOIN program p ON d.director_id = p.director_id WHERE p.title = 'Dracula';
SELECT c.name, c.internet FROM channel c JOIN director d ON c.channel_id = d.channel_id GROUP BY c.channel_id ORDER BY COUNT(d.director_id) DESC LIMIT 1;
SELECT d.name FROM director d WHERE d.age BETWEEN 30 AND 60;
SELECT c.name FROM channel c JOIN director d ON c.channel_id = d.channel_id WHERE d.age < 40 OR d.age > 60 GROUP BY c.channel_id HAVING COUNT(DISTINCT CASE WHEN d.age < 40 THEN d.director_id END) > 0 AND COUNT(DISTINCT CASE WHEN d.age > 60 THEN d.director_id END) > 0;
SELECT c.channel_id, c.name FROM channel c WHERE c.channel_id NOT IN (SELECT d.channel_id FROM director d WHERE d.name = 'Hank Baskett');
SELECT COUNT(*) FROM radio;
SELECT r.transmitter FROM radio r ORDER BY r.erp_kw ASC;
SELECT tv_show_name, original_airdate FROM tv_show;
SELECT station_name FROM city_channel WHERE affiliation != 'ABC';
SELECT r.transmitter FROM radio r WHERE r.erp_kw > 150 OR r.erp_kw < 30;
SELECT r.transmitter FROM radio r ORDER BY r.erp_kw DESC LIMIT 1;
SELECT AVG(erp_kw) FROM radio;
SELECT affiliation, COUNT(*) AS channel_count FROM city_channel GROUP BY affiliation;
SELECT affiliation FROM city_channel GROUP BY affiliation ORDER BY COUNT(*) DESC LIMIT 1;
SELECT affiliation FROM city_channel GROUP BY affiliation HAVING COUNT(*) > 3;
SELECT city, station_name FROM city_channel ORDER BY station_name ASC;
SELECT r.transmitter, c.city FROM radio r JOIN city_channel c ON r.radio_id = c.radio_id;
SELECT r.transmitter, c.station_name FROM radio r JOIN city_channel c ON r.radio_id = c.radio_id ORDER BY r.erp_kw DESC;
SELECT r.transmitter, COUNT(c.city_channel_id) AS city_channel_count FROM radio r LEFT JOIN city_channel c ON r.radio_id = c.radio_id GROUP BY r.transmitter;